[2023-07-11 18:22:38,441] {processor.py:163} INFO - Started process (PID=48) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:22:38,443] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:22:38,444] {logging_mixin.py:109} INFO - [2023-07-11 18:22:38,444] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:22:44,023] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:22:44,038] {logging_mixin.py:109} INFO - [2023-07-11 18:22:44,038] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:22:44,077] {logging_mixin.py:109} INFO - [2023-07-11 18:22:44,076] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:22:44,096] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 5.661 seconds
[2023-07-11 18:22:59,083] {processor.py:163} INFO - Started process (PID=102) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:22:59,086] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:22:59,087] {logging_mixin.py:109} INFO - [2023-07-11 18:22:59,087] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:00,448] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:00,510] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 0, 482674, tzinfo=Timezone('UTC')), 'duration': 7}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:00,538] {logging_mixin.py:109} INFO - [2023-07-11 18:23:00,538] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:00,569] {logging_mixin.py:109} INFO - [2023-07-11 18:23:00,568] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:00,587] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.519 seconds
[2023-07-11 18:23:09,726] {processor.py:163} INFO - Started process (PID=121) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:09,730] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:23:09,734] {logging_mixin.py:109} INFO - [2023-07-11 18:23:09,733] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:12,485] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:12,548] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 12, 517700, tzinfo=Timezone('UTC')), 'duration': 19}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:12,573] {logging_mixin.py:109} INFO - [2023-07-11 18:23:12,573] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:12,620] {logging_mixin.py:109} INFO - [2023-07-11 18:23:12,620] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:12,651] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.937 seconds
[2023-07-11 18:23:19,754] {processor.py:163} INFO - Started process (PID=160) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:19,756] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:23:19,757] {logging_mixin.py:109} INFO - [2023-07-11 18:23:19,756] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:20,370] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:20,401] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 20, 386702, tzinfo=Timezone('UTC')), 'duration': 27}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:20,415] {logging_mixin.py:109} INFO - [2023-07-11 18:23:20,414] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:20,432] {logging_mixin.py:109} INFO - [2023-07-11 18:23:20,432] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:20,448] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.698 seconds
[2023-07-11 18:23:30,680] {processor.py:163} INFO - Started process (PID=182) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:30,682] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:23:30,683] {logging_mixin.py:109} INFO - [2023-07-11 18:23:30,683] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:31,454] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:31,506] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 31, 486064, tzinfo=Timezone('UTC')), 'duration': 38}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:31,527] {logging_mixin.py:109} INFO - [2023-07-11 18:23:31,527] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:31,554] {logging_mixin.py:109} INFO - [2023-07-11 18:23:31,554] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:31,571] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.897 seconds
[2023-07-11 18:23:40,963] {processor.py:163} INFO - Started process (PID=201) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:40,964] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:23:40,965] {logging_mixin.py:109} INFO - [2023-07-11 18:23:40,965] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:41,673] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:41,718] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 41, 697850, tzinfo=Timezone('UTC')), 'duration': 48}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:41,738] {logging_mixin.py:109} INFO - [2023-07-11 18:23:41,738] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:41,759] {logging_mixin.py:109} INFO - [2023-07-11 18:23:41,759] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:41,776] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.817 seconds
[2023-07-11 18:23:51,361] {processor.py:163} INFO - Started process (PID=240) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:51,362] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:23:51,363] {logging_mixin.py:109} INFO - [2023-07-11 18:23:51,363] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:52,015] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:23:52,049] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 23, 52, 33577, tzinfo=Timezone('UTC')), 'duration': 58}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:23:52,063] {logging_mixin.py:109} INFO - [2023-07-11 18:23:52,062] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:23:52,079] {logging_mixin.py:109} INFO - [2023-07-11 18:23:52,078] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:23:52,091] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.735 seconds
[2023-07-11 18:24:01,828] {processor.py:163} INFO - Started process (PID=262) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:01,829] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:01,831] {logging_mixin.py:109} INFO - [2023-07-11 18:24:01,830] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:02,791] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:02,852] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 2, 824507, tzinfo=Timezone('UTC')), 'duration': 69}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:02,878] {logging_mixin.py:109} INFO - [2023-07-11 18:24:02,876] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:02,916] {logging_mixin.py:109} INFO - [2023-07-11 18:24:02,915] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:02,934] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.115 seconds
[2023-07-11 18:24:12,019] {processor.py:163} INFO - Started process (PID=281) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:12,021] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:12,025] {logging_mixin.py:109} INFO - [2023-07-11 18:24:12,023] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:12,852] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:12,910] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 12, 883658, tzinfo=Timezone('UTC')), 'duration': 79}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:12,930] {logging_mixin.py:109} INFO - [2023-07-11 18:24:12,929] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:12,951] {logging_mixin.py:109} INFO - [2023-07-11 18:24:12,951] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:12,989] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.977 seconds
[2023-07-11 18:24:22,304] {processor.py:163} INFO - Started process (PID=325) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:22,308] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:22,311] {logging_mixin.py:109} INFO - [2023-07-11 18:24:22,311] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:23,706] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:23,801] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 23, 763098, tzinfo=Timezone('UTC')), 'duration': 90}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:23,846] {logging_mixin.py:109} INFO - [2023-07-11 18:24:23,846] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:23,879] {logging_mixin.py:109} INFO - [2023-07-11 18:24:23,879] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:23,896] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.599 seconds
[2023-07-11 18:24:32,705] {processor.py:163} INFO - Started process (PID=342) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:32,706] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:32,707] {logging_mixin.py:109} INFO - [2023-07-11 18:24:32,707] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:33,564] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:33,616] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 33, 591318, tzinfo=Timezone('UTC')), 'duration': 100}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:33,634] {logging_mixin.py:109} INFO - [2023-07-11 18:24:33,634] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:33,666] {logging_mixin.py:109} INFO - [2023-07-11 18:24:33,665] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:33,690] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.992 seconds
[2023-07-11 18:24:42,789] {processor.py:163} INFO - Started process (PID=361) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:42,791] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:42,792] {logging_mixin.py:109} INFO - [2023-07-11 18:24:42,792] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:44,091] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:44,204] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 44, 147036, tzinfo=Timezone('UTC')), 'duration': 110}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:44,257] {logging_mixin.py:109} INFO - [2023-07-11 18:24:44,256] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:44,311] {logging_mixin.py:109} INFO - [2023-07-11 18:24:44,311] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:44,328] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.552 seconds
[2023-07-11 18:24:53,058] {processor.py:163} INFO - Started process (PID=398) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:53,059] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:24:53,060] {logging_mixin.py:109} INFO - [2023-07-11 18:24:53,060] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:53,725] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:24:53,767] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 24, 53, 748474, tzinfo=Timezone('UTC')), 'duration': 120}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:24:53,788] {logging_mixin.py:109} INFO - [2023-07-11 18:24:53,787] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:24:53,808] {logging_mixin.py:109} INFO - [2023-07-11 18:24:53,807] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:24:53,825] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.772 seconds
[2023-07-11 18:25:04,040] {processor.py:163} INFO - Started process (PID=422) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:04,042] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:04,043] {logging_mixin.py:109} INFO - [2023-07-11 18:25:04,043] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:04,804] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:04,841] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 4, 827311, tzinfo=Timezone('UTC')), 'duration': 131}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:04,856] {logging_mixin.py:109} INFO - [2023-07-11 18:25:04,856] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:04,874] {logging_mixin.py:109} INFO - [2023-07-11 18:25:04,874] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:04,886] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.851 seconds
[2023-07-11 18:25:14,397] {processor.py:163} INFO - Started process (PID=441) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:14,399] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:14,400] {logging_mixin.py:109} INFO - [2023-07-11 18:25:14,400] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:15,162] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:15,202] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 15, 187348, tzinfo=Timezone('UTC')), 'duration': 141}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:15,219] {logging_mixin.py:109} INFO - [2023-07-11 18:25:15,219] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:15,239] {logging_mixin.py:109} INFO - [2023-07-11 18:25:15,239] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:15,252] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.862 seconds
[2023-07-11 18:25:24,547] {processor.py:163} INFO - Started process (PID=487) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:24,549] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:24,550] {logging_mixin.py:109} INFO - [2023-07-11 18:25:24,550] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:25,386] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:25,429] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 25, 411342, tzinfo=Timezone('UTC')), 'duration': 152}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:25,445] {logging_mixin.py:109} INFO - [2023-07-11 18:25:25,445] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:25,469] {logging_mixin.py:109} INFO - [2023-07-11 18:25:25,469] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:25,485] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.944 seconds
[2023-07-11 18:25:34,607] {processor.py:163} INFO - Started process (PID=502) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:34,609] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:34,610] {logging_mixin.py:109} INFO - [2023-07-11 18:25:34,610] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:35,351] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:35,402] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 35, 378694, tzinfo=Timezone('UTC')), 'duration': 162}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:35,424] {logging_mixin.py:109} INFO - [2023-07-11 18:25:35,424] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:35,450] {logging_mixin.py:109} INFO - [2023-07-11 18:25:35,450] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:35,462] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.860 seconds
[2023-07-11 18:25:44,948] {processor.py:163} INFO - Started process (PID=521) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:44,949] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:44,950] {logging_mixin.py:109} INFO - [2023-07-11 18:25:44,949] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:45,446] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:45,475] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 45, 462895, tzinfo=Timezone('UTC')), 'duration': 172}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:45,487] {logging_mixin.py:109} INFO - [2023-07-11 18:25:45,487] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:45,501] {logging_mixin.py:109} INFO - [2023-07-11 18:25:45,501] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:45,509] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.565 seconds
[2023-07-11 18:25:55,101] {processor.py:163} INFO - Started process (PID=565) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:55,103] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:25:55,106] {logging_mixin.py:109} INFO - [2023-07-11 18:25:55,105] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:57,028] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:25:57,121] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 25, 57, 81423, tzinfo=Timezone('UTC')), 'duration': 183}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:25:57,170] {logging_mixin.py:109} INFO - [2023-07-11 18:25:57,170] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:25:57,224] {logging_mixin.py:109} INFO - [2023-07-11 18:25:57,223] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:25:57,248] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.153 seconds
[2023-07-11 18:26:05,961] {processor.py:163} INFO - Started process (PID=582) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:05,966] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:05,967] {logging_mixin.py:109} INFO - [2023-07-11 18:26:05,967] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:06,569] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:06,622] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 6, 600120, tzinfo=Timezone('UTC')), 'duration': 193}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:06,645] {logging_mixin.py:109} INFO - [2023-07-11 18:26:06,645] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:06,673] {logging_mixin.py:109} INFO - [2023-07-11 18:26:06,672] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:06,689] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.734 seconds
[2023-07-11 18:26:16,284] {processor.py:163} INFO - Started process (PID=602) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:16,285] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:16,286] {logging_mixin.py:109} INFO - [2023-07-11 18:26:16,286] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:16,987] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:17,020] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 17, 6162, tzinfo=Timezone('UTC')), 'duration': 203}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:17,034] {logging_mixin.py:109} INFO - [2023-07-11 18:26:17,034] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:17,052] {logging_mixin.py:109} INFO - [2023-07-11 18:26:17,052] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:17,061] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.780 seconds
[2023-07-11 18:26:26,953] {processor.py:163} INFO - Started process (PID=645) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:26,956] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:26,959] {logging_mixin.py:109} INFO - [2023-07-11 18:26:26,959] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:27,929] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:27,989] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 27, 960266, tzinfo=Timezone('UTC')), 'duration': 214}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:28,021] {logging_mixin.py:109} INFO - [2023-07-11 18:26:28,021] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:28,050] {logging_mixin.py:109} INFO - [2023-07-11 18:26:28,050] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:28,070] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.123 seconds
[2023-07-11 18:26:37,593] {processor.py:163} INFO - Started process (PID=671) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:37,596] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:37,597] {logging_mixin.py:109} INFO - [2023-07-11 18:26:37,596] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:38,435] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:38,488] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 38, 466143, tzinfo=Timezone('UTC')), 'duration': 225}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:38,514] {logging_mixin.py:109} INFO - [2023-07-11 18:26:38,513] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:38,541] {logging_mixin.py:109} INFO - [2023-07-11 18:26:38,541] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:38,560] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.973 seconds
[2023-07-11 18:26:47,630] {processor.py:163} INFO - Started process (PID=682) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:47,635] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:47,636] {logging_mixin.py:109} INFO - [2023-07-11 18:26:47,636] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:48,132] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:48,157] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 48, 146715, tzinfo=Timezone('UTC')), 'duration': 234}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:48,169] {logging_mixin.py:109} INFO - [2023-07-11 18:26:48,169] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:48,183] {logging_mixin.py:109} INFO - [2023-07-11 18:26:48,183] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:48,194] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.568 seconds
[2023-07-11 18:26:58,221] {processor.py:163} INFO - Started process (PID=725) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:58,224] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:26:58,226] {logging_mixin.py:109} INFO - [2023-07-11 18:26:58,225] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:59,379] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:26:59,434] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 26, 59, 411439, tzinfo=Timezone('UTC')), 'duration': 246}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:26:59,457] {logging_mixin.py:109} INFO - [2023-07-11 18:26:59,457] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:26:59,487] {logging_mixin.py:109} INFO - [2023-07-11 18:26:59,487] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:26:59,503] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.292 seconds
[2023-07-11 18:27:08,448] {processor.py:163} INFO - Started process (PID=742) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:08,449] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:08,450] {logging_mixin.py:109} INFO - [2023-07-11 18:27:08,450] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:09,343] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:09,395] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 27, 9, 367236, tzinfo=Timezone('UTC')), 'duration': 256}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:27:09,422] {logging_mixin.py:109} INFO - [2023-07-11 18:27:09,422] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:27:09,452] {logging_mixin.py:109} INFO - [2023-07-11 18:27:09,451] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:27:09,468] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.026 seconds
[2023-07-11 18:27:18,574] {processor.py:163} INFO - Started process (PID=762) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:18,577] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:18,578] {logging_mixin.py:109} INFO - [2023-07-11 18:27:18,577] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:19,418] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:19,456] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 27, 19, 442248, tzinfo=Timezone('UTC')), 'duration': 266}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:27:19,471] {logging_mixin.py:109} INFO - [2023-07-11 18:27:19,470] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:27:19,496] {logging_mixin.py:109} INFO - [2023-07-11 18:27:19,495] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:27:19,513] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.945 seconds
[2023-07-11 18:27:28,721] {processor.py:163} INFO - Started process (PID=805) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:28,723] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:28,726] {logging_mixin.py:109} INFO - [2023-07-11 18:27:28,725] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:29,681] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:29,746] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 27, 29, 721250, tzinfo=Timezone('UTC')), 'duration': 276}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:27:29,770] {logging_mixin.py:109} INFO - [2023-07-11 18:27:29,770] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:27:29,801] {logging_mixin.py:109} INFO - [2023-07-11 18:27:29,801] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:27:29,832] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.117 seconds
[2023-07-11 18:27:38,834] {processor.py:163} INFO - Started process (PID=822) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:38,842] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:38,843] {logging_mixin.py:109} INFO - [2023-07-11 18:27:38,843] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:39,536] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:39,590] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 27, 39, 568089, tzinfo=Timezone('UTC')), 'duration': 286}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:27:39,610] {logging_mixin.py:109} INFO - [2023-07-11 18:27:39,610] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:27:39,636] {logging_mixin.py:109} INFO - [2023-07-11 18:27:39,635] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:27:39,648] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.818 seconds
[2023-07-11 18:27:49,184] {processor.py:163} INFO - Started process (PID=842) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:49,186] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:49,188] {logging_mixin.py:109} INFO - [2023-07-11 18:27:49,187] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:50,426] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:50,487] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 27, 50, 464535, tzinfo=Timezone('UTC')), 'duration': 297}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:27:50,503] {logging_mixin.py:109} INFO - [2023-07-11 18:27:50,503] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:27:50,527] {logging_mixin.py:109} INFO - [2023-07-11 18:27:50,527] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:27:50,543] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.370 seconds
[2023-07-11 18:27:59,250] {processor.py:163} INFO - Started process (PID=886) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:27:59,252] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:27:59,253] {logging_mixin.py:109} INFO - [2023-07-11 18:27:59,253] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:00,128] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:00,184] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 28, 0, 157906, tzinfo=Timezone('UTC')), 'duration': 306}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:28:00,211] {logging_mixin.py:109} INFO - [2023-07-11 18:28:00,210] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:28:00,258] {logging_mixin.py:109} INFO - [2023-07-11 18:28:00,258] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:28:00,275] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.034 seconds
[2023-07-11 18:28:09,926] {processor.py:163} INFO - Started process (PID=903) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:09,928] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:28:09,928] {logging_mixin.py:109} INFO - [2023-07-11 18:28:09,928] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:10,585] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:10,619] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 28, 10, 604687, tzinfo=Timezone('UTC')), 'duration': 317}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:28:10,634] {logging_mixin.py:109} INFO - [2023-07-11 18:28:10,634] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:28:10,651] {logging_mixin.py:109} INFO - [2023-07-11 18:28:10,651] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:28:10,663] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.741 seconds
[2023-07-11 18:28:20,748] {processor.py:163} INFO - Started process (PID=923) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:20,750] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:28:20,752] {logging_mixin.py:109} INFO - [2023-07-11 18:28:20,751] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:21,707] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:21,771] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 28, 21, 753623, tzinfo=Timezone('UTC')), 'duration': 328}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:28:21,790] {logging_mixin.py:109} INFO - [2023-07-11 18:28:21,790] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:28:21,814] {logging_mixin.py:109} INFO - [2023-07-11 18:28:21,814] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:28:21,831] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.091 seconds
[2023-07-11 18:28:22,874] {processor.py:163} INFO - Started process (PID=936) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:22,877] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:28:22,878] {logging_mixin.py:109} INFO - [2023-07-11 18:28:22,878] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:28:24,255] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:46,518] {processor.py:163} INFO - Started process (PID=39) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:46,521] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:29:46,522] {logging_mixin.py:109} INFO - [2023-07-11 18:29:46,522] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:51,554] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:52,528] {logging_mixin.py:109} INFO - [2023-07-11 18:29:52,526] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:29:52,578] {logging_mixin.py:109} INFO - [2023-07-11 18:29:52,577] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:29:52,635] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 6.124 seconds
[2023-07-11 18:29:57,431] {processor.py:163} INFO - Started process (PID=91) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:57,437] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:29:57,438] {logging_mixin.py:109} INFO - [2023-07-11 18:29:57,438] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:58,244] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:29:58,297] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 29, 58, 270970, tzinfo=Timezone('UTC')), 'duration': 424}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:29:58,350] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 29, 58, 334450, tzinfo=Timezone('UTC')), 'duration': 424}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:29:58,357] {logging_mixin.py:109} INFO - [2023-07-11 18:29:58,356] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:29:58,386] {logging_mixin.py:109} INFO - [2023-07-11 18:29:58,385] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:29:58,409] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.985 seconds
[2023-07-11 18:30:07,698] {processor.py:163} INFO - Started process (PID=110) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:07,717] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:07,719] {logging_mixin.py:109} INFO - [2023-07-11 18:30:07,719] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:09,188] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:09,276] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 30, 9, 244242, tzinfo=Timezone('UTC')), 'duration': 435}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:30:09,295] {logging_mixin.py:109} INFO - [2023-07-11 18:30:09,295] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:30:09,326] {logging_mixin.py:109} INFO - [2023-07-11 18:30:09,326] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:30:09,352] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.717 seconds
[2023-07-11 18:30:18,110] {processor.py:163} INFO - Started process (PID=120) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:18,112] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:18,113] {logging_mixin.py:109} INFO - [2023-07-11 18:30:18,113] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:19,278] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:19,327] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 30, 19, 303418, tzinfo=Timezone('UTC')), 'duration': 445}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:30:19,338] {logging_mixin.py:109} INFO - [2023-07-11 18:30:19,338] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:30:19,367] {logging_mixin.py:109} INFO - [2023-07-11 18:30:19,367] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:30:19,416] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.315 seconds
[2023-07-11 18:30:29,042] {processor.py:163} INFO - Started process (PID=171) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:29,044] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:29,045] {logging_mixin.py:109} INFO - [2023-07-11 18:30:29,045] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:29,753] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:29,790] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 30, 29, 773183, tzinfo=Timezone('UTC')), 'duration': 456}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:30:29,805] {logging_mixin.py:109} INFO - [2023-07-11 18:30:29,805] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:30:29,823] {logging_mixin.py:109} INFO - [2023-07-11 18:30:29,823] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:30:29,838] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.801 seconds
[2023-07-11 18:30:39,284] {processor.py:163} INFO - Started process (PID=190) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:39,289] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:39,290] {logging_mixin.py:109} INFO - [2023-07-11 18:30:39,290] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:40,080] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:40,114] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 30, 40, 98675, tzinfo=Timezone('UTC')), 'duration': 466}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:30:40,130] {logging_mixin.py:109} INFO - [2023-07-11 18:30:40,130] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:30:40,147] {logging_mixin.py:109} INFO - [2023-07-11 18:30:40,147] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:30:40,160] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.883 seconds
[2023-07-11 18:30:49,320] {processor.py:163} INFO - Started process (PID=201) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:49,321] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:49,322] {logging_mixin.py:109} INFO - [2023-07-11 18:30:49,322] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:49,800] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:49,831] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 30, 49, 817203, tzinfo=Timezone('UTC')), 'duration': 476}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:30:49,845] {logging_mixin.py:109} INFO - [2023-07-11 18:30:49,844] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:30:49,859] {logging_mixin.py:109} INFO - [2023-07-11 18:30:49,859] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:30:49,872] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.556 seconds
[2023-07-11 18:30:59,977] {processor.py:163} INFO - Started process (PID=251) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:30:59,982] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:30:59,982] {logging_mixin.py:109} INFO - [2023-07-11 18:30:59,982] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:00,564] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:00,592] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 0, 580605, tzinfo=Timezone('UTC')), 'duration': 487}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:00,605] {logging_mixin.py:109} INFO - [2023-07-11 18:31:00,605] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:00,621] {logging_mixin.py:109} INFO - [2023-07-11 18:31:00,621] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:00,634] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.660 seconds
[2023-07-11 18:31:10,186] {processor.py:163} INFO - Started process (PID=270) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:10,187] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:31:10,188] {logging_mixin.py:109} INFO - [2023-07-11 18:31:10,188] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:10,877] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:10,912] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 11, 18, 31, 2, 56953, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 31, 4, 858150, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 10, 896013, tzinfo=Timezone('UTC')), 'duration': 6}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:10,944] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 10, 932821, tzinfo=Timezone('UTC')), 'duration': 497}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:10,955] {logging_mixin.py:109} INFO - [2023-07-11 18:31:10,954] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:10,971] {logging_mixin.py:109} INFO - [2023-07-11 18:31:10,971] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:10,985] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.802 seconds
[2023-07-11 18:31:20,466] {processor.py:163} INFO - Started process (PID=289) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:20,468] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:31:20,469] {logging_mixin.py:109} INFO - [2023-07-11 18:31:20,469] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:21,348] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:21,387] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 11, 18, 31, 2, 56953, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 31, 4, 858150, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 21, 368687, tzinfo=Timezone('UTC')), 'duration': 16}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:21,448] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 21, 425398, tzinfo=Timezone('UTC')), 'duration': 508}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:21,468] {logging_mixin.py:109} INFO - [2023-07-11 18:31:21,467] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:21,509] {logging_mixin.py:109} INFO - [2023-07-11 18:31:21,509] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:21,536] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.079 seconds
[2023-07-11 18:31:30,805] {processor.py:163} INFO - Started process (PID=332) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:30,806] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:31:30,807] {logging_mixin.py:109} INFO - [2023-07-11 18:31:30,807] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:31,426] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:31,457] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 11, 18, 31, 2, 56953, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 31, 4, 858150, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 31, 444112, tzinfo=Timezone('UTC')), 'duration': 26}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:31,489] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 31, 477975, tzinfo=Timezone('UTC')), 'duration': 518}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:31,499] {logging_mixin.py:109} INFO - [2023-07-11 18:31:31,499] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:31,515] {logging_mixin.py:109} INFO - [2023-07-11 18:31:31,515] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:31,529] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.728 seconds
[2023-07-11 18:31:40,988] {processor.py:163} INFO - Started process (PID=351) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:40,990] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:31:40,991] {logging_mixin.py:109} INFO - [2023-07-11 18:31:40,991] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:41,794] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:41,836] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 11, 18, 31, 2, 56953, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 31, 4, 858150, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 41, 816438, tzinfo=Timezone('UTC')), 'duration': 36}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:41,873] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 41, 858918, tzinfo=Timezone('UTC')), 'duration': 528}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:41,888] {logging_mixin.py:109} INFO - [2023-07-11 18:31:41,887] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:41,909] {logging_mixin.py:109} INFO - [2023-07-11 18:31:41,909] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:41,923] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.939 seconds
[2023-07-11 18:31:51,098] {processor.py:163} INFO - Started process (PID=371) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:51,100] {processor.py:642} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:31:51,101] {logging_mixin.py:109} INFO - [2023-07-11 18:31:51,101] {dagbag.py:500} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:51,623] {processor.py:654} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:31:51,651] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 11, 18, 31, 2, 56953, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 31, 4, 858150, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 51, 639011, tzinfo=Timezone('UTC')), 'duration': 46}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:51,680] {processor.py:584} ERROR - Error executing TaskCallbackRequest callback for file: /opt/airflow/dags/dag_weather.py
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 575, in execute_callbacks
    self._execute_task_callbacks(dagbag, request)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/dag_processing/processor.py", line 607, in _execute_task_callbacks
    ti.handle_failure_with_callback(error=request.msg, test_mode=self.UNIT_TEST_MODE)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1765, in handle_failure_with_callback
    self.handle_failure(error=error, test_mode=test_mode, force_fail=force_fail, session=session)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 1755, in handle_failure
    session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2540, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2682, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 70, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 2642, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 422, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 589, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 245, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1136, in _emit_insert_statements
    statement, params
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1011, in execute
    return meth(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1130, in _execute_clauseelement
    distilled_params,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1277, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 608, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "execution_date" of relation "task_fail" does not exist
LINE 1: INSERT INTO task_fail (task_id, dag_id, execution_date, star...
                                                ^

[SQL: INSERT INTO task_fail (task_id, dag_id, execution_date, start_date, end_date, duration) VALUES (%(task_id)s, %(dag_id)s, %(execution_date)s, %(start_date)s, %(end_date)s, %(duration)s) RETURNING task_fail.id]
[parameters: {'task_id': 'extract_data', 'dag_id': 'dag_weather', 'execution_date': datetime.datetime(2023, 7, 10, 0, 0, tzinfo=Timezone('UTC')), 'start_date': datetime.datetime(2023, 7, 11, 18, 22, 53, 359218, tzinfo=Timezone('UTC')), 'end_date': datetime.datetime(2023, 7, 11, 18, 31, 51, 670202, tzinfo=Timezone('UTC')), 'duration': 538}]
(Background on this error at: http://sqlalche.me/e/13/f405)
[2023-07-11 18:31:51,689] {logging_mixin.py:109} INFO - [2023-07-11 18:31:51,689] {dag.py:2396} INFO - Sync 1 DAGs
[2023-07-11 18:31:51,711] {logging_mixin.py:109} INFO - [2023-07-11 18:31:51,711] {dag.py:2935} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00
[2023-07-11 18:31:51,727] {processor.py:171} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.635 seconds
[2023-07-11 18:51:29,247] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:29,254] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:51:29,256] {logging_mixin.py:115} INFO - [2023-07-11 18:51:29,255] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:31,058] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:31,181] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,180] {manager.py:508} INFO - Created Permission View: can read on DAG:dag_weather
[2023-07-11 18:51:31,198] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,198] {manager.py:508} INFO - Created Permission View: can edit on DAG:dag_weather
[2023-07-11 18:51:31,214] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,214] {manager.py:508} INFO - Created Permission View: can delete on DAG:dag_weather
[2023-07-11 18:51:31,214] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,214] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:51:31,232] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,232] {dag.py:2439} INFO - Creating ORM DAG for dag_weather
[2023-07-11 18:51:31,261] {logging_mixin.py:115} INFO - [2023-07-11 18:51:31,261] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:51:31,287] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.047 seconds
[2023-07-11 18:51:41,350] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:41,351] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:51:41,352] {logging_mixin.py:115} INFO - [2023-07-11 18:51:41,351] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:42,193] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:42,220] {logging_mixin.py:115} INFO - [2023-07-11 18:51:42,219] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:51:42,294] {logging_mixin.py:115} INFO - [2023-07-11 18:51:42,293] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:51:42,324] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.982 seconds
[2023-07-11 18:51:52,386] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:52,387] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:51:52,388] {logging_mixin.py:115} INFO - [2023-07-11 18:51:52,388] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:52,804] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:51:52,815] {logging_mixin.py:115} INFO - [2023-07-11 18:51:52,814] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:51:52,836] {logging_mixin.py:115} INFO - [2023-07-11 18:51:52,836] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:51:52,851] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.470 seconds
[2023-07-11 18:52:03,494] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:03,498] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:03,498] {logging_mixin.py:115} INFO - [2023-07-11 18:52:03,498] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:03,895] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:03,916] {logging_mixin.py:115} INFO - [2023-07-11 18:52:03,916] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:03,941] {logging_mixin.py:115} INFO - [2023-07-11 18:52:03,941] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:52:03,957] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.468 seconds
[2023-07-11 18:52:14,642] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:14,646] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:14,647] {logging_mixin.py:115} INFO - [2023-07-11 18:52:14,647] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:15,105] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:15,135] {logging_mixin.py:115} INFO - [2023-07-11 18:52:15,134] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:15,166] {logging_mixin.py:115} INFO - [2023-07-11 18:52:15,165] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:52:15,178] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.544 seconds
[2023-07-11 18:52:25,767] {processor.py:153} INFO - Started process (PID=233) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:25,768] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:25,768] {logging_mixin.py:115} INFO - [2023-07-11 18:52:25,768] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:26,127] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:26,150] {logging_mixin.py:115} INFO - [2023-07-11 18:52:26,150] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:26,177] {logging_mixin.py:115} INFO - [2023-07-11 18:52:26,176] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:52:26,197] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.435 seconds
[2023-07-11 18:52:36,939] {processor.py:153} INFO - Started process (PID=244) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:36,940] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:36,940] {logging_mixin.py:115} INFO - [2023-07-11 18:52:36,940] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:37,298] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:37,319] {logging_mixin.py:115} INFO - [2023-07-11 18:52:37,319] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:37,341] {logging_mixin.py:115} INFO - [2023-07-11 18:52:37,341] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:52:37,357] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.425 seconds
[2023-07-11 18:52:48,035] {processor.py:153} INFO - Started process (PID=255) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:48,035] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:48,036] {logging_mixin.py:115} INFO - [2023-07-11 18:52:48,036] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:48,393] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:48,413] {logging_mixin.py:115} INFO - [2023-07-11 18:52:48,413] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:48,436] {logging_mixin.py:115} INFO - [2023-07-11 18:52:48,435] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:52:48,451] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.420 seconds
[2023-07-11 18:52:59,160] {processor.py:153} INFO - Started process (PID=266) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:59,161] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:52:59,161] {logging_mixin.py:115} INFO - [2023-07-11 18:52:59,161] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:59,773] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:52:59,847] {logging_mixin.py:115} INFO - [2023-07-11 18:52:59,846] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:52:59,956] {logging_mixin.py:115} INFO - [2023-07-11 18:52:59,956] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:00,001] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.845 seconds
[2023-07-11 18:53:10,375] {processor.py:153} INFO - Started process (PID=277) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:10,376] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:53:10,376] {logging_mixin.py:115} INFO - [2023-07-11 18:53:10,376] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:10,748] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:10,768] {logging_mixin.py:115} INFO - [2023-07-11 18:53:10,768] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:53:10,793] {logging_mixin.py:115} INFO - [2023-07-11 18:53:10,793] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:10,809] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.437 seconds
[2023-07-11 18:53:21,694] {processor.py:153} INFO - Started process (PID=288) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:21,698] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:53:21,699] {logging_mixin.py:115} INFO - [2023-07-11 18:53:21,699] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:22,071] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:22,092] {logging_mixin.py:115} INFO - [2023-07-11 18:53:22,091] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:53:22,117] {logging_mixin.py:115} INFO - [2023-07-11 18:53:22,116] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:22,131] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.441 seconds
[2023-07-11 18:53:32,835] {processor.py:153} INFO - Started process (PID=299) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:32,835] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:53:32,836] {logging_mixin.py:115} INFO - [2023-07-11 18:53:32,836] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:33,258] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:33,279] {logging_mixin.py:115} INFO - [2023-07-11 18:53:33,279] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:53:33,301] {logging_mixin.py:115} INFO - [2023-07-11 18:53:33,301] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:33,316] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.485 seconds
[2023-07-11 18:53:44,091] {processor.py:153} INFO - Started process (PID=315) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:44,091] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:53:44,092] {logging_mixin.py:115} INFO - [2023-07-11 18:53:44,092] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:44,472] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:44,496] {logging_mixin.py:115} INFO - [2023-07-11 18:53:44,496] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:53:44,523] {logging_mixin.py:115} INFO - [2023-07-11 18:53:44,523] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:44,539] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.452 seconds
[2023-07-11 18:53:55,211] {processor.py:153} INFO - Started process (PID=326) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:55,215] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:53:55,216] {logging_mixin.py:115} INFO - [2023-07-11 18:53:55,215] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:55,553] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:53:55,575] {logging_mixin.py:115} INFO - [2023-07-11 18:53:55,574] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:53:55,599] {logging_mixin.py:115} INFO - [2023-07-11 18:53:55,598] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:53:55,611] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.404 seconds
[2023-07-11 18:54:06,335] {processor.py:153} INFO - Started process (PID=337) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:06,335] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:54:06,336] {logging_mixin.py:115} INFO - [2023-07-11 18:54:06,336] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:06,688] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:06,716] {logging_mixin.py:115} INFO - [2023-07-11 18:54:06,715] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:54:06,749] {logging_mixin.py:115} INFO - [2023-07-11 18:54:06,749] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:54:06,766] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.435 seconds
[2023-07-11 18:54:17,459] {processor.py:153} INFO - Started process (PID=348) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:17,459] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:54:17,460] {logging_mixin.py:115} INFO - [2023-07-11 18:54:17,460] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:17,812] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:17,833] {logging_mixin.py:115} INFO - [2023-07-11 18:54:17,833] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:54:17,854] {logging_mixin.py:115} INFO - [2023-07-11 18:54:17,854] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:54:17,868] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.412 seconds
[2023-07-11 18:54:28,603] {processor.py:153} INFO - Started process (PID=359) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:28,604] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:54:28,605] {logging_mixin.py:115} INFO - [2023-07-11 18:54:28,605] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:28,986] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:29,008] {logging_mixin.py:115} INFO - [2023-07-11 18:54:29,008] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:54:29,030] {logging_mixin.py:115} INFO - [2023-07-11 18:54:29,030] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:54:29,047] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.449 seconds
[2023-07-11 18:54:39,730] {processor.py:153} INFO - Started process (PID=370) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:39,731] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:54:39,731] {logging_mixin.py:115} INFO - [2023-07-11 18:54:39,731] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:40,145] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:40,165] {logging_mixin.py:115} INFO - [2023-07-11 18:54:40,164] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:54:40,188] {logging_mixin.py:115} INFO - [2023-07-11 18:54:40,188] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:54:40,203] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.476 seconds
[2023-07-11 18:54:50,848] {processor.py:153} INFO - Started process (PID=381) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:50,849] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:54:50,849] {logging_mixin.py:115} INFO - [2023-07-11 18:54:50,849] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:51,252] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:54:51,279] {logging_mixin.py:115} INFO - [2023-07-11 18:54:51,278] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:54:51,311] {logging_mixin.py:115} INFO - [2023-07-11 18:54:51,311] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:54:51,326] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.481 seconds
[2023-07-11 18:55:01,982] {processor.py:153} INFO - Started process (PID=392) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:01,984] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:01,984] {logging_mixin.py:115} INFO - [2023-07-11 18:55:01,984] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:02,355] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:02,379] {logging_mixin.py:115} INFO - [2023-07-11 18:55:02,378] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:02,405] {logging_mixin.py:115} INFO - [2023-07-11 18:55:02,405] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:02,422] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.444 seconds
[2023-07-11 18:55:13,107] {processor.py:153} INFO - Started process (PID=403) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:13,107] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:13,108] {logging_mixin.py:115} INFO - [2023-07-11 18:55:13,108] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:13,467] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:13,488] {logging_mixin.py:115} INFO - [2023-07-11 18:55:13,488] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:13,510] {logging_mixin.py:115} INFO - [2023-07-11 18:55:13,510] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:13,526] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.423 seconds
[2023-07-11 18:55:24,259] {processor.py:153} INFO - Started process (PID=414) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:24,260] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:24,260] {logging_mixin.py:115} INFO - [2023-07-11 18:55:24,260] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:24,696] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:24,723] {logging_mixin.py:115} INFO - [2023-07-11 18:55:24,723] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:24,751] {logging_mixin.py:115} INFO - [2023-07-11 18:55:24,751] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:24,767] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.511 seconds
[2023-07-11 18:55:35,541] {processor.py:153} INFO - Started process (PID=430) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:35,545] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:35,546] {logging_mixin.py:115} INFO - [2023-07-11 18:55:35,546] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:36,127] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:36,169] {logging_mixin.py:115} INFO - [2023-07-11 18:55:36,168] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:36,221] {logging_mixin.py:115} INFO - [2023-07-11 18:55:36,221] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:36,250] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.718 seconds
[2023-07-11 18:55:46,669] {processor.py:153} INFO - Started process (PID=441) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:46,670] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:46,670] {logging_mixin.py:115} INFO - [2023-07-11 18:55:46,670] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:47,018] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:47,037] {logging_mixin.py:115} INFO - [2023-07-11 18:55:47,036] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:47,059] {logging_mixin.py:115} INFO - [2023-07-11 18:55:47,059] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:47,075] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.410 seconds
[2023-07-11 18:55:57,798] {processor.py:153} INFO - Started process (PID=452) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:57,798] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:55:57,799] {logging_mixin.py:115} INFO - [2023-07-11 18:55:57,799] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:58,127] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:55:58,148] {logging_mixin.py:115} INFO - [2023-07-11 18:55:58,148] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:55:58,173] {logging_mixin.py:115} INFO - [2023-07-11 18:55:58,173] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:55:58,188] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.394 seconds
[2023-07-11 18:56:08,951] {processor.py:153} INFO - Started process (PID=463) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:08,951] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:56:08,952] {logging_mixin.py:115} INFO - [2023-07-11 18:56:08,952] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:09,300] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:09,321] {logging_mixin.py:115} INFO - [2023-07-11 18:56:09,320] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:56:09,343] {logging_mixin.py:115} INFO - [2023-07-11 18:56:09,343] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:56:09,358] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.413 seconds
[2023-07-11 18:56:20,088] {processor.py:153} INFO - Started process (PID=474) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:20,092] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:56:20,092] {logging_mixin.py:115} INFO - [2023-07-11 18:56:20,092] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:20,448] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:20,469] {logging_mixin.py:115} INFO - [2023-07-11 18:56:20,468] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:56:20,490] {logging_mixin.py:115} INFO - [2023-07-11 18:56:20,489] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:56:20,506] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.422 seconds
[2023-07-11 18:56:31,240] {processor.py:153} INFO - Started process (PID=485) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:31,241] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:56:31,242] {logging_mixin.py:115} INFO - [2023-07-11 18:56:31,242] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:31,585] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:31,608] {logging_mixin.py:115} INFO - [2023-07-11 18:56:31,607] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:56:31,632] {logging_mixin.py:115} INFO - [2023-07-11 18:56:31,632] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:56:31,649] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.415 seconds
[2023-07-11 18:56:42,335] {processor.py:153} INFO - Started process (PID=496) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:42,336] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:56:42,336] {logging_mixin.py:115} INFO - [2023-07-11 18:56:42,336] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:42,708] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:42,732] {logging_mixin.py:115} INFO - [2023-07-11 18:56:42,731] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:56:42,763] {logging_mixin.py:115} INFO - [2023-07-11 18:56:42,763] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:56:42,823] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.491 seconds
[2023-07-11 18:56:53,483] {processor.py:153} INFO - Started process (PID=507) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:53,483] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:56:53,484] {logging_mixin.py:115} INFO - [2023-07-11 18:56:53,484] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:53,865] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:56:53,886] {logging_mixin.py:115} INFO - [2023-07-11 18:56:53,886] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:56:53,909] {logging_mixin.py:115} INFO - [2023-07-11 18:56:53,909] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:56:53,971] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.492 seconds
[2023-07-11 18:57:04,655] {processor.py:153} INFO - Started process (PID=518) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:04,672] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:57:04,673] {logging_mixin.py:115} INFO - [2023-07-11 18:57:04,673] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:05,038] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:05,059] {logging_mixin.py:115} INFO - [2023-07-11 18:57:05,058] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:57:05,083] {logging_mixin.py:115} INFO - [2023-07-11 18:57:05,083] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:57:05,136] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.486 seconds
[2023-07-11 18:57:15,763] {processor.py:153} INFO - Started process (PID=529) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:15,763] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:57:15,764] {logging_mixin.py:115} INFO - [2023-07-11 18:57:15,764] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:16,116] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:16,136] {logging_mixin.py:115} INFO - [2023-07-11 18:57:16,136] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:57:16,158] {logging_mixin.py:115} INFO - [2023-07-11 18:57:16,158] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:57:16,195] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.435 seconds
[2023-07-11 18:57:27,046] {processor.py:153} INFO - Started process (PID=545) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:27,047] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:57:27,047] {logging_mixin.py:115} INFO - [2023-07-11 18:57:27,047] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:27,412] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:27,432] {logging_mixin.py:115} INFO - [2023-07-11 18:57:27,432] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:57:27,454] {logging_mixin.py:115} INFO - [2023-07-11 18:57:27,454] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:57:27,485] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.442 seconds
[2023-07-11 18:57:38,159] {processor.py:153} INFO - Started process (PID=556) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:38,160] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:57:38,160] {logging_mixin.py:115} INFO - [2023-07-11 18:57:38,160] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:38,524] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:38,545] {logging_mixin.py:115} INFO - [2023-07-11 18:57:38,545] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:57:38,567] {logging_mixin.py:115} INFO - [2023-07-11 18:57:38,566] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:57:38,614] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.458 seconds
[2023-07-11 18:57:49,282] {processor.py:153} INFO - Started process (PID=567) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:49,282] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:57:49,283] {logging_mixin.py:115} INFO - [2023-07-11 18:57:49,283] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:49,665] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:57:49,690] {logging_mixin.py:115} INFO - [2023-07-11 18:57:49,689] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:57:49,723] {logging_mixin.py:115} INFO - [2023-07-11 18:57:49,723] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:57:49,753] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.475 seconds
[2023-07-11 18:58:00,395] {processor.py:153} INFO - Started process (PID=578) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:00,395] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:00,415] {logging_mixin.py:115} INFO - [2023-07-11 18:58:00,415] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:00,813] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:00,834] {logging_mixin.py:115} INFO - [2023-07-11 18:58:00,834] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:00,858] {logging_mixin.py:115} INFO - [2023-07-11 18:58:00,858] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:00,870] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.479 seconds
[2023-07-11 18:58:11,521] {processor.py:153} INFO - Started process (PID=589) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:11,530] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:11,531] {logging_mixin.py:115} INFO - [2023-07-11 18:58:11,531] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:11,868] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:11,890] {logging_mixin.py:115} INFO - [2023-07-11 18:58:11,890] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:11,912] {logging_mixin.py:115} INFO - [2023-07-11 18:58:11,912] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:11,932] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.414 seconds
[2023-07-11 18:58:22,655] {processor.py:153} INFO - Started process (PID=600) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:22,656] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:22,657] {logging_mixin.py:115} INFO - [2023-07-11 18:58:22,657] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:23,055] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:23,082] {logging_mixin.py:115} INFO - [2023-07-11 18:58:23,082] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:23,118] {logging_mixin.py:115} INFO - [2023-07-11 18:58:23,117] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:23,136] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.485 seconds
[2023-07-11 18:58:33,792] {processor.py:153} INFO - Started process (PID=611) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:33,792] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:33,793] {logging_mixin.py:115} INFO - [2023-07-11 18:58:33,793] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:34,197] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:34,216] {logging_mixin.py:115} INFO - [2023-07-11 18:58:34,216] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:34,237] {logging_mixin.py:115} INFO - [2023-07-11 18:58:34,237] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:34,263] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.475 seconds
[2023-07-11 18:58:44,941] {processor.py:153} INFO - Started process (PID=622) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:44,942] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:44,943] {logging_mixin.py:115} INFO - [2023-07-11 18:58:44,942] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:45,312] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:45,333] {logging_mixin.py:115} INFO - [2023-07-11 18:58:45,333] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:45,358] {logging_mixin.py:115} INFO - [2023-07-11 18:58:45,358] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:45,387] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.449 seconds
[2023-07-11 18:58:56,087] {processor.py:153} INFO - Started process (PID=633) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:56,095] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:58:56,096] {logging_mixin.py:115} INFO - [2023-07-11 18:58:56,096] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:56,465] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:58:56,485] {logging_mixin.py:115} INFO - [2023-07-11 18:58:56,484] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:58:56,506] {logging_mixin.py:115} INFO - [2023-07-11 18:58:56,506] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:58:56,522] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.440 seconds
[2023-07-11 18:59:07,210] {processor.py:153} INFO - Started process (PID=644) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:07,211] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:59:07,212] {logging_mixin.py:115} INFO - [2023-07-11 18:59:07,212] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:07,581] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:07,651] {logging_mixin.py:115} INFO - [2023-07-11 18:59:07,651] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:59:07,681] {logging_mixin.py:115} INFO - [2023-07-11 18:59:07,681] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:59:07,702] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.498 seconds
[2023-07-11 18:59:18,488] {processor.py:153} INFO - Started process (PID=660) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:18,489] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:59:18,490] {logging_mixin.py:115} INFO - [2023-07-11 18:59:18,489] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:18,860] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:18,882] {logging_mixin.py:115} INFO - [2023-07-11 18:59:18,881] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:59:18,904] {logging_mixin.py:115} INFO - [2023-07-11 18:59:18,903] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:59:18,930] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.448 seconds
[2023-07-11 18:59:29,643] {processor.py:153} INFO - Started process (PID=671) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:29,644] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:59:29,644] {logging_mixin.py:115} INFO - [2023-07-11 18:59:29,644] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:30,001] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:30,023] {logging_mixin.py:115} INFO - [2023-07-11 18:59:30,022] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:59:30,046] {logging_mixin.py:115} INFO - [2023-07-11 18:59:30,046] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:59:30,072] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.432 seconds
[2023-07-11 18:59:40,794] {processor.py:153} INFO - Started process (PID=682) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:40,795] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:59:40,795] {logging_mixin.py:115} INFO - [2023-07-11 18:59:40,795] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:41,143] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:41,167] {logging_mixin.py:115} INFO - [2023-07-11 18:59:41,167] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:59:41,197] {logging_mixin.py:115} INFO - [2023-07-11 18:59:41,197] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:59:41,233] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.442 seconds
[2023-07-11 18:59:51,953] {processor.py:153} INFO - Started process (PID=693) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:51,954] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 18:59:51,954] {logging_mixin.py:115} INFO - [2023-07-11 18:59:51,954] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:52,298] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 18:59:52,318] {logging_mixin.py:115} INFO - [2023-07-11 18:59:52,318] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 18:59:52,342] {logging_mixin.py:115} INFO - [2023-07-11 18:59:52,342] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 18:59:52,380] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.430 seconds
[2023-07-11 19:28:47,244] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:28:47,248] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:28:47,250] {logging_mixin.py:115} INFO - [2023-07-11 19:28:47,249] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:28:48,960] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:28:49,087] {logging_mixin.py:115} INFO - [2023-07-11 19:28:49,087] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:28:49,134] {logging_mixin.py:115} INFO - [2023-07-11 19:28:49,134] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:28:49,172] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.936 seconds
[2023-07-11 19:28:59,482] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:28:59,484] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:28:59,485] {logging_mixin.py:115} INFO - [2023-07-11 19:28:59,485] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:00,735] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:00,772] {logging_mixin.py:115} INFO - [2023-07-11 19:29:00,769] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:00,861] {logging_mixin.py:115} INFO - [2023-07-11 19:29:00,861] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:29:00,940] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.466 seconds
[2023-07-11 19:29:11,770] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:11,771] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:29:11,771] {logging_mixin.py:115} INFO - [2023-07-11 19:29:11,771] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:12,307] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:12,321] {logging_mixin.py:115} INFO - [2023-07-11 19:29:12,321] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:12,349] {logging_mixin.py:115} INFO - [2023-07-11 19:29:12,349] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:29:12,381] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.615 seconds
[2023-07-11 19:29:22,917] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:22,918] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:29:22,919] {logging_mixin.py:115} INFO - [2023-07-11 19:29:22,919] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:23,357] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:23,387] {logging_mixin.py:115} INFO - [2023-07-11 19:29:23,386] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:23,418] {logging_mixin.py:115} INFO - [2023-07-11 19:29:23,417] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:29:23,433] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.519 seconds
[2023-07-11 19:29:33,514] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:33,515] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:29:33,517] {logging_mixin.py:115} INFO - [2023-07-11 19:29:33,517] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:34,349] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:34,394] {logging_mixin.py:115} INFO - [2023-07-11 19:29:34,393] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:34,438] {logging_mixin.py:115} INFO - [2023-07-11 19:29:34,437] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:29:34,462] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.971 seconds
[2023-07-11 19:29:44,528] {processor.py:153} INFO - Started process (PID=233) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:44,529] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:29:44,529] {logging_mixin.py:115} INFO - [2023-07-11 19:29:44,529] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:44,907] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:44,929] {logging_mixin.py:115} INFO - [2023-07-11 19:29:44,929] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:44,952] {logging_mixin.py:115} INFO - [2023-07-11 19:29:44,952] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-10T00:00:00+00:00, run_after=2023-07-11T00:00:00+00:00
[2023-07-11 19:29:44,967] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.443 seconds
[2023-07-11 19:29:55,673] {processor.py:153} INFO - Started process (PID=260) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:55,674] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:29:55,675] {logging_mixin.py:115} INFO - [2023-07-11 19:29:55,675] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:56,292] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:29:56,325] {logging_mixin.py:115} INFO - [2023-07-11 19:29:56,325] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:29:56,356] {logging_mixin.py:115} INFO - [2023-07-11 19:29:56,356] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:29:56,371] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.703 seconds
[2023-07-11 19:30:06,952] {processor.py:153} INFO - Started process (PID=276) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:06,953] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:30:06,954] {logging_mixin.py:115} INFO - [2023-07-11 19:30:06,954] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:07,336] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:07,358] {logging_mixin.py:115} INFO - [2023-07-11 19:30:07,358] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:30:07,384] {logging_mixin.py:115} INFO - [2023-07-11 19:30:07,383] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:30:07,395] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.450 seconds
[2023-07-11 19:30:18,111] {processor.py:153} INFO - Started process (PID=287) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:18,112] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:30:18,113] {logging_mixin.py:115} INFO - [2023-07-11 19:30:18,112] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:18,560] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:18,581] {logging_mixin.py:115} INFO - [2023-07-11 19:30:18,580] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:30:18,603] {logging_mixin.py:115} INFO - [2023-07-11 19:30:18,603] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:30:18,618] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.511 seconds
[2023-07-11 19:30:29,262] {processor.py:153} INFO - Started process (PID=298) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:29,263] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:30:29,264] {logging_mixin.py:115} INFO - [2023-07-11 19:30:29,264] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:29,657] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:29,678] {logging_mixin.py:115} INFO - [2023-07-11 19:30:29,678] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:30:29,703] {logging_mixin.py:115} INFO - [2023-07-11 19:30:29,703] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:30:29,717] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.463 seconds
[2023-07-11 19:30:40,539] {processor.py:153} INFO - Started process (PID=309) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:40,543] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:30:40,543] {logging_mixin.py:115} INFO - [2023-07-11 19:30:40,543] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:41,149] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:41,207] {logging_mixin.py:115} INFO - [2023-07-11 19:30:41,206] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:30:41,245] {logging_mixin.py:115} INFO - [2023-07-11 19:30:41,245] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:30:41,267] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.734 seconds
[2023-07-11 19:30:51,844] {processor.py:153} INFO - Started process (PID=325) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:51,844] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:30:51,845] {logging_mixin.py:115} INFO - [2023-07-11 19:30:51,845] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:52,234] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:30:52,259] {logging_mixin.py:115} INFO - [2023-07-11 19:30:52,259] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:30:52,282] {logging_mixin.py:115} INFO - [2023-07-11 19:30:52,282] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:30:52,294] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.454 seconds
[2023-07-11 19:31:02,984] {processor.py:153} INFO - Started process (PID=336) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:02,984] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:31:02,985] {logging_mixin.py:115} INFO - [2023-07-11 19:31:02,985] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:03,397] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:03,422] {logging_mixin.py:115} INFO - [2023-07-11 19:31:03,422] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:31:03,449] {logging_mixin.py:115} INFO - [2023-07-11 19:31:03,448] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:31:03,465] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.486 seconds
[2023-07-11 19:31:14,113] {processor.py:153} INFO - Started process (PID=347) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:14,114] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:31:14,114] {logging_mixin.py:115} INFO - [2023-07-11 19:31:14,114] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:14,524] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:14,543] {logging_mixin.py:115} INFO - [2023-07-11 19:31:14,542] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:31:14,563] {logging_mixin.py:115} INFO - [2023-07-11 19:31:14,563] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:31:14,578] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.470 seconds
[2023-07-11 19:31:25,322] {processor.py:153} INFO - Started process (PID=358) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:25,322] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:31:25,323] {logging_mixin.py:115} INFO - [2023-07-11 19:31:25,323] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:25,688] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:25,709] {logging_mixin.py:115} INFO - [2023-07-11 19:31:25,709] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:31:25,733] {logging_mixin.py:115} INFO - [2023-07-11 19:31:25,733] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:31:25,749] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.431 seconds
[2023-07-11 19:31:36,441] {processor.py:153} INFO - Started process (PID=369) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:36,442] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:31:36,443] {logging_mixin.py:115} INFO - [2023-07-11 19:31:36,443] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:36,982] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:37,013] {logging_mixin.py:115} INFO - [2023-07-11 19:31:37,012] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:31:37,048] {logging_mixin.py:115} INFO - [2023-07-11 19:31:37,048] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:31:37,072] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.636 seconds
[2023-07-11 19:31:47,589] {processor.py:153} INFO - Started process (PID=380) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:47,590] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:31:47,591] {logging_mixin.py:115} INFO - [2023-07-11 19:31:47,591] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:48,046] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:31:48,073] {logging_mixin.py:115} INFO - [2023-07-11 19:31:48,073] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:31:48,098] {logging_mixin.py:115} INFO - [2023-07-11 19:31:48,098] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:31:48,115] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.531 seconds
[2023-07-11 19:34:31,825] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:31,830] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:34:31,831] {logging_mixin.py:115} INFO - [2023-07-11 19:34:31,831] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:33,691] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:33,721] {logging_mixin.py:115} INFO - [2023-07-11 19:34:33,721] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:34:33,764] {logging_mixin.py:115} INFO - [2023-07-11 19:34:33,764] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:34:33,787] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.972 seconds
[2023-07-11 19:34:44,102] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:44,103] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:34:44,104] {logging_mixin.py:115} INFO - [2023-07-11 19:34:44,104] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:46,149] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:46,184] {logging_mixin.py:115} INFO - [2023-07-11 19:34:46,183] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:34:46,327] {logging_mixin.py:115} INFO - [2023-07-11 19:34:46,327] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:34:46,955] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.863 seconds
[2023-07-11 19:34:57,656] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:57,657] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:34:57,658] {logging_mixin.py:115} INFO - [2023-07-11 19:34:57,658] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:58,732] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:34:58,766] {logging_mixin.py:115} INFO - [2023-07-11 19:34:58,765] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:34:58,809] {logging_mixin.py:115} INFO - [2023-07-11 19:34:58,809] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:34:58,831] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.182 seconds
[2023-07-11 19:35:08,977] {processor.py:153} INFO - Started process (PID=220) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:08,979] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:35:08,981] {logging_mixin.py:115} INFO - [2023-07-11 19:35:08,980] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:10,031] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:10,079] {logging_mixin.py:115} INFO - [2023-07-11 19:35:10,078] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:35:10,142] {logging_mixin.py:115} INFO - [2023-07-11 19:35:10,142] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:35:10,168] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.204 seconds
[2023-07-11 19:35:21,006] {processor.py:153} INFO - Started process (PID=231) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:21,007] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:35:21,008] {logging_mixin.py:115} INFO - [2023-07-11 19:35:21,008] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:21,563] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:21,601] {logging_mixin.py:115} INFO - [2023-07-11 19:35:21,600] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:35:21,637] {logging_mixin.py:115} INFO - [2023-07-11 19:35:21,637] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:35:21,676] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.675 seconds
[2023-07-11 19:35:32,232] {processor.py:153} INFO - Started process (PID=242) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:32,233] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:35:32,234] {logging_mixin.py:115} INFO - [2023-07-11 19:35:32,233] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:32,646] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:32,666] {logging_mixin.py:115} INFO - [2023-07-11 19:35:32,666] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:35:32,687] {logging_mixin.py:115} INFO - [2023-07-11 19:35:32,687] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:35:32,702] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.475 seconds
[2023-07-11 19:35:43,406] {processor.py:153} INFO - Started process (PID=253) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:43,407] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:35:43,407] {logging_mixin.py:115} INFO - [2023-07-11 19:35:43,407] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:43,762] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:43,787] {logging_mixin.py:115} INFO - [2023-07-11 19:35:43,786] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:35:43,816] {logging_mixin.py:115} INFO - [2023-07-11 19:35:43,816] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:35:43,832] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.430 seconds
[2023-07-11 19:35:54,520] {processor.py:153} INFO - Started process (PID=264) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:54,521] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:35:54,521] {logging_mixin.py:115} INFO - [2023-07-11 19:35:54,521] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:54,900] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:35:54,928] {logging_mixin.py:115} INFO - [2023-07-11 19:35:54,927] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:35:54,961] {logging_mixin.py:115} INFO - [2023-07-11 19:35:54,961] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:35:54,977] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.460 seconds
[2023-07-11 19:36:05,647] {processor.py:153} INFO - Started process (PID=275) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:05,648] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:36:05,648] {logging_mixin.py:115} INFO - [2023-07-11 19:36:05,648] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:06,060] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:06,082] {logging_mixin.py:115} INFO - [2023-07-11 19:36:06,081] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:36:06,110] {logging_mixin.py:115} INFO - [2023-07-11 19:36:06,110] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:36:06,128] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.485 seconds
[2023-07-11 19:36:16,933] {processor.py:153} INFO - Started process (PID=291) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:16,939] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:36:16,939] {logging_mixin.py:115} INFO - [2023-07-11 19:36:16,939] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:17,295] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:17,319] {logging_mixin.py:115} INFO - [2023-07-11 19:36:17,318] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:36:17,345] {logging_mixin.py:115} INFO - [2023-07-11 19:36:17,345] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:36:17,361] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.433 seconds
[2023-07-11 19:36:28,054] {processor.py:153} INFO - Started process (PID=302) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:28,055] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:36:28,055] {logging_mixin.py:115} INFO - [2023-07-11 19:36:28,055] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:28,423] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:28,445] {logging_mixin.py:115} INFO - [2023-07-11 19:36:28,444] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:36:28,466] {logging_mixin.py:115} INFO - [2023-07-11 19:36:28,466] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:36:28,480] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.429 seconds
[2023-07-11 19:36:39,187] {processor.py:153} INFO - Started process (PID=313) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:39,189] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:36:39,193] {logging_mixin.py:115} INFO - [2023-07-11 19:36:39,192] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:39,746] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:39,773] {logging_mixin.py:115} INFO - [2023-07-11 19:36:39,773] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:36:39,810] {logging_mixin.py:115} INFO - [2023-07-11 19:36:39,810] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:36:39,833] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.655 seconds
[2023-07-11 19:36:50,308] {processor.py:153} INFO - Started process (PID=324) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:50,313] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:36:50,314] {logging_mixin.py:115} INFO - [2023-07-11 19:36:50,314] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:50,694] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:36:50,714] {logging_mixin.py:115} INFO - [2023-07-11 19:36:50,713] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:36:50,734] {logging_mixin.py:115} INFO - [2023-07-11 19:36:50,734] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:36:50,750] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.447 seconds
[2023-07-11 19:37:01,423] {processor.py:153} INFO - Started process (PID=335) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:01,423] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:01,424] {logging_mixin.py:115} INFO - [2023-07-11 19:37:01,424] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:01,799] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:01,821] {logging_mixin.py:115} INFO - [2023-07-11 19:37:01,821] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:01,844] {logging_mixin.py:115} INFO - [2023-07-11 19:37:01,844] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:01,860] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.441 seconds
[2023-07-11 19:37:12,549] {processor.py:153} INFO - Started process (PID=346) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:12,550] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:12,550] {logging_mixin.py:115} INFO - [2023-07-11 19:37:12,550] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:12,916] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:12,936] {logging_mixin.py:115} INFO - [2023-07-11 19:37:12,935] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:12,957] {logging_mixin.py:115} INFO - [2023-07-11 19:37:12,957] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:12,971] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.425 seconds
[2023-07-11 19:37:23,676] {processor.py:153} INFO - Started process (PID=357) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:23,677] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:23,678] {logging_mixin.py:115} INFO - [2023-07-11 19:37:23,678] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:24,161] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:24,181] {logging_mixin.py:115} INFO - [2023-07-11 19:37:24,181] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:24,209] {logging_mixin.py:115} INFO - [2023-07-11 19:37:24,209] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:24,223] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.552 seconds
[2023-07-11 19:37:34,795] {processor.py:153} INFO - Started process (PID=368) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:34,795] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:34,796] {logging_mixin.py:115} INFO - [2023-07-11 19:37:34,796] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:35,260] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:35,288] {logging_mixin.py:115} INFO - [2023-07-11 19:37:35,287] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:35,320] {logging_mixin.py:115} INFO - [2023-07-11 19:37:35,320] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:35,340] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.549 seconds
[2023-07-11 19:37:45,934] {processor.py:153} INFO - Started process (PID=379) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:45,935] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:45,935] {logging_mixin.py:115} INFO - [2023-07-11 19:37:45,935] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:46,297] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:46,317] {logging_mixin.py:115} INFO - [2023-07-11 19:37:46,316] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:46,341] {logging_mixin.py:115} INFO - [2023-07-11 19:37:46,340] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:46,357] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.428 seconds
[2023-07-11 19:37:57,052] {processor.py:153} INFO - Started process (PID=390) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:57,056] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:37:57,056] {logging_mixin.py:115} INFO - [2023-07-11 19:37:57,056] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:57,444] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:37:57,470] {logging_mixin.py:115} INFO - [2023-07-11 19:37:57,469] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:37:57,501] {logging_mixin.py:115} INFO - [2023-07-11 19:37:57,501] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:37:57,519] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.470 seconds
[2023-07-11 19:38:08,302] {processor.py:153} INFO - Started process (PID=406) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:08,302] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:38:08,303] {logging_mixin.py:115} INFO - [2023-07-11 19:38:08,303] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:08,659] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:08,681] {logging_mixin.py:115} INFO - [2023-07-11 19:38:08,681] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:38:08,706] {logging_mixin.py:115} INFO - [2023-07-11 19:38:08,706] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:38:08,719] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.420 seconds
[2023-07-11 19:38:19,431] {processor.py:153} INFO - Started process (PID=417) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:19,432] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:38:19,432] {logging_mixin.py:115} INFO - [2023-07-11 19:38:19,432] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:19,915] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:19,946] {logging_mixin.py:115} INFO - [2023-07-11 19:38:19,945] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:38:19,978] {logging_mixin.py:115} INFO - [2023-07-11 19:38:19,978] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:38:19,998] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.576 seconds
[2023-07-11 19:38:30,552] {processor.py:153} INFO - Started process (PID=428) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:30,564] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:38:30,565] {logging_mixin.py:115} INFO - [2023-07-11 19:38:30,564] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:30,958] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:30,983] {logging_mixin.py:115} INFO - [2023-07-11 19:38:30,983] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:38:31,006] {logging_mixin.py:115} INFO - [2023-07-11 19:38:31,006] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:38:31,030] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.481 seconds
[2023-07-11 19:38:41,695] {processor.py:153} INFO - Started process (PID=439) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:41,695] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:38:41,696] {logging_mixin.py:115} INFO - [2023-07-11 19:38:41,696] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:42,074] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:42,098] {logging_mixin.py:115} INFO - [2023-07-11 19:38:42,097] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:38:42,122] {logging_mixin.py:115} INFO - [2023-07-11 19:38:42,122] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:38:42,136] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.445 seconds
[2023-07-11 19:38:52,824] {processor.py:153} INFO - Started process (PID=450) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:52,824] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:38:52,825] {logging_mixin.py:115} INFO - [2023-07-11 19:38:52,825] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:53,516] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:38:53,553] {logging_mixin.py:115} INFO - [2023-07-11 19:38:53,552] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:38:53,603] {logging_mixin.py:115} INFO - [2023-07-11 19:38:53,603] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:38:53,641] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.821 seconds
[2023-07-11 19:39:04,026] {processor.py:153} INFO - Started process (PID=461) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:04,027] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:04,028] {logging_mixin.py:115} INFO - [2023-07-11 19:39:04,028] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:04,478] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:04,506] {logging_mixin.py:115} INFO - [2023-07-11 19:39:04,506] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:39:04,534] {logging_mixin.py:115} INFO - [2023-07-11 19:39:04,534] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:39:04,549] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.527 seconds
[2023-07-11 19:39:15,286] {processor.py:153} INFO - Started process (PID=472) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:15,292] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:15,293] {logging_mixin.py:115} INFO - [2023-07-11 19:39:15,293] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:15,681] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:15,701] {logging_mixin.py:115} INFO - [2023-07-11 19:39:15,701] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:39:15,722] {logging_mixin.py:115} INFO - [2023-07-11 19:39:15,722] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:39:15,741] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.459 seconds
[2023-07-11 19:39:26,400] {processor.py:153} INFO - Started process (PID=483) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:26,400] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:26,401] {logging_mixin.py:115} INFO - [2023-07-11 19:39:26,401] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:26,749] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:26,770] {logging_mixin.py:115} INFO - [2023-07-11 19:39:26,769] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:39:26,795] {logging_mixin.py:115} INFO - [2023-07-11 19:39:26,795] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:39:26,810] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.414 seconds
[2023-07-11 19:39:37,562] {processor.py:153} INFO - Started process (PID=494) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:37,562] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:37,563] {logging_mixin.py:115} INFO - [2023-07-11 19:39:37,563] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:37,901] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:37,922] {logging_mixin.py:115} INFO - [2023-07-11 19:39:37,922] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:39:37,945] {logging_mixin.py:115} INFO - [2023-07-11 19:39:37,945] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:39:37,959] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.402 seconds
[2023-07-11 19:39:48,653] {processor.py:153} INFO - Started process (PID=505) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:48,653] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:48,654] {logging_mixin.py:115} INFO - [2023-07-11 19:39:48,654] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:49,075] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:49,095] {logging_mixin.py:115} INFO - [2023-07-11 19:39:49,095] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:39:49,116] {logging_mixin.py:115} INFO - [2023-07-11 19:39:49,116] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:39:49,131] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.483 seconds
[2023-07-11 19:39:59,905] {processor.py:153} INFO - Started process (PID=521) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:39:59,906] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:39:59,907] {logging_mixin.py:115} INFO - [2023-07-11 19:39:59,907] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:00,383] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:00,404] {logging_mixin.py:115} INFO - [2023-07-11 19:40:00,404] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:00,435] {logging_mixin.py:115} INFO - [2023-07-11 19:40:00,435] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:00,461] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.560 seconds
[2023-07-11 19:40:11,037] {processor.py:153} INFO - Started process (PID=532) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:11,037] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:40:11,038] {logging_mixin.py:115} INFO - [2023-07-11 19:40:11,038] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:11,427] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:11,448] {logging_mixin.py:115} INFO - [2023-07-11 19:40:11,447] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:11,471] {logging_mixin.py:115} INFO - [2023-07-11 19:40:11,471] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:11,483] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.451 seconds
[2023-07-11 19:40:22,173] {processor.py:153} INFO - Started process (PID=543) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:22,173] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:40:22,174] {logging_mixin.py:115} INFO - [2023-07-11 19:40:22,174] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:22,571] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:22,608] {logging_mixin.py:115} INFO - [2023-07-11 19:40:22,607] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:22,659] {logging_mixin.py:115} INFO - [2023-07-11 19:40:22,659] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:22,676] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.507 seconds
[2023-07-11 19:40:33,303] {processor.py:153} INFO - Started process (PID=554) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:33,307] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:40:33,308] {logging_mixin.py:115} INFO - [2023-07-11 19:40:33,308] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:33,746] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:33,765] {logging_mixin.py:115} INFO - [2023-07-11 19:40:33,765] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:33,787] {logging_mixin.py:115} INFO - [2023-07-11 19:40:33,787] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:33,802] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.504 seconds
[2023-07-11 19:40:44,432] {processor.py:153} INFO - Started process (PID=565) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:44,433] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:40:44,433] {logging_mixin.py:115} INFO - [2023-07-11 19:40:44,433] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:44,790] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:44,813] {logging_mixin.py:115} INFO - [2023-07-11 19:40:44,812] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:44,834] {logging_mixin.py:115} INFO - [2023-07-11 19:40:44,834] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:44,851] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.424 seconds
[2023-07-11 19:40:55,562] {processor.py:153} INFO - Started process (PID=576) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:55,563] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:40:55,564] {logging_mixin.py:115} INFO - [2023-07-11 19:40:55,564] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:56,011] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:40:56,032] {logging_mixin.py:115} INFO - [2023-07-11 19:40:56,032] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:40:56,054] {logging_mixin.py:115} INFO - [2023-07-11 19:40:56,054] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:40:56,083] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.529 seconds
[2023-07-11 19:41:06,692] {processor.py:153} INFO - Started process (PID=587) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:06,693] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:41:06,693] {logging_mixin.py:115} INFO - [2023-07-11 19:41:06,693] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:07,122] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:07,142] {logging_mixin.py:115} INFO - [2023-07-11 19:41:07,142] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:41:07,165] {logging_mixin.py:115} INFO - [2023-07-11 19:41:07,165] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:41:07,191] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.503 seconds
[2023-07-11 19:41:17,859] {processor.py:153} INFO - Started process (PID=598) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:17,860] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:41:17,860] {logging_mixin.py:115} INFO - [2023-07-11 19:41:17,860] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:18,230] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:18,249] {logging_mixin.py:115} INFO - [2023-07-11 19:41:18,249] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:41:18,271] {logging_mixin.py:115} INFO - [2023-07-11 19:41:18,271] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:41:18,290] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.436 seconds
[2023-07-11 19:41:28,945] {processor.py:153} INFO - Started process (PID=609) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:28,946] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:41:28,947] {logging_mixin.py:115} INFO - [2023-07-11 19:41:28,947] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:29,331] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:29,352] {logging_mixin.py:115} INFO - [2023-07-11 19:41:29,352] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:41:29,374] {logging_mixin.py:115} INFO - [2023-07-11 19:41:29,374] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:41:29,390] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.449 seconds
[2023-07-11 19:41:40,099] {processor.py:153} INFO - Started process (PID=620) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:40,099] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:41:40,100] {logging_mixin.py:115} INFO - [2023-07-11 19:41:40,100] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:40,539] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:40,560] {logging_mixin.py:115} INFO - [2023-07-11 19:41:40,560] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:41:40,582] {logging_mixin.py:115} INFO - [2023-07-11 19:41:40,581] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:41:40,599] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.503 seconds
[2023-07-11 19:41:51,350] {processor.py:153} INFO - Started process (PID=636) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:51,354] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:41:51,354] {logging_mixin.py:115} INFO - [2023-07-11 19:41:51,354] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:51,710] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:41:51,731] {logging_mixin.py:115} INFO - [2023-07-11 19:41:51,730] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:41:51,754] {logging_mixin.py:115} INFO - [2023-07-11 19:41:51,754] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:41:51,770] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.424 seconds
[2023-07-11 19:42:02,486] {processor.py:153} INFO - Started process (PID=647) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:02,486] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:02,487] {logging_mixin.py:115} INFO - [2023-07-11 19:42:02,487] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:02,845] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:02,867] {logging_mixin.py:115} INFO - [2023-07-11 19:42:02,866] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:02,891] {logging_mixin.py:115} INFO - [2023-07-11 19:42:02,890] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:02,905] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.423 seconds
[2023-07-11 19:42:13,639] {processor.py:153} INFO - Started process (PID=658) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:13,639] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:13,640] {logging_mixin.py:115} INFO - [2023-07-11 19:42:13,640] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:14,016] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:14,038] {logging_mixin.py:115} INFO - [2023-07-11 19:42:14,037] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:14,069] {logging_mixin.py:115} INFO - [2023-07-11 19:42:14,069] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:14,085] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.452 seconds
[2023-07-11 19:42:24,787] {processor.py:153} INFO - Started process (PID=669) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:24,789] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:24,790] {logging_mixin.py:115} INFO - [2023-07-11 19:42:24,790] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:25,250] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:25,345] {logging_mixin.py:115} INFO - [2023-07-11 19:42:25,342] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:25,396] {logging_mixin.py:115} INFO - [2023-07-11 19:42:25,396] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:25,417] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.637 seconds
[2023-07-11 19:42:35,984] {processor.py:153} INFO - Started process (PID=680) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:35,985] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:35,986] {logging_mixin.py:115} INFO - [2023-07-11 19:42:35,986] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:36,498] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:36,535] {logging_mixin.py:115} INFO - [2023-07-11 19:42:36,534] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:36,566] {logging_mixin.py:115} INFO - [2023-07-11 19:42:36,566] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:36,582] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.606 seconds
[2023-07-11 19:42:47,112] {processor.py:153} INFO - Started process (PID=691) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:47,112] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:47,113] {logging_mixin.py:115} INFO - [2023-07-11 19:42:47,113] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:47,557] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:47,584] {logging_mixin.py:115} INFO - [2023-07-11 19:42:47,584] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:47,613] {logging_mixin.py:115} INFO - [2023-07-11 19:42:47,613] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:47,629] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.522 seconds
[2023-07-11 19:42:58,249] {processor.py:153} INFO - Started process (PID=702) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:58,253] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:42:58,254] {logging_mixin.py:115} INFO - [2023-07-11 19:42:58,253] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:58,611] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:42:58,634] {logging_mixin.py:115} INFO - [2023-07-11 19:42:58,633] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:42:58,656] {logging_mixin.py:115} INFO - [2023-07-11 19:42:58,655] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:42:58,671] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.426 seconds
[2023-07-11 19:43:09,440] {processor.py:153} INFO - Started process (PID=713) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:09,440] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:43:09,441] {logging_mixin.py:115} INFO - [2023-07-11 19:43:09,441] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:09,793] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:09,817] {logging_mixin.py:115} INFO - [2023-07-11 19:43:09,817] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:43:09,839] {logging_mixin.py:115} INFO - [2023-07-11 19:43:09,839] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:43:09,853] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.417 seconds
[2023-07-11 19:43:20,574] {processor.py:153} INFO - Started process (PID=724) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:20,575] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:43:20,576] {logging_mixin.py:115} INFO - [2023-07-11 19:43:20,576] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:21,002] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:21,024] {logging_mixin.py:115} INFO - [2023-07-11 19:43:21,023] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:43:21,048] {logging_mixin.py:115} INFO - [2023-07-11 19:43:21,048] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:43:21,066] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.497 seconds
[2023-07-11 19:43:31,689] {processor.py:153} INFO - Started process (PID=735) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:31,690] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:43:31,691] {logging_mixin.py:115} INFO - [2023-07-11 19:43:31,691] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:32,319] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:32,346] {logging_mixin.py:115} INFO - [2023-07-11 19:43:32,346] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:43:32,373] {logging_mixin.py:115} INFO - [2023-07-11 19:43:32,373] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:43:32,392] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.707 seconds
[2023-07-11 19:43:43,172] {processor.py:153} INFO - Started process (PID=751) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:43,172] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:43:43,173] {logging_mixin.py:115} INFO - [2023-07-11 19:43:43,173] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:43,526] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:43,549] {logging_mixin.py:115} INFO - [2023-07-11 19:43:43,549] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:43:43,573] {logging_mixin.py:115} INFO - [2023-07-11 19:43:43,573] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:43:43,603] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.437 seconds
[2023-07-11 19:43:54,291] {processor.py:153} INFO - Started process (PID=762) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:54,292] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:43:54,293] {logging_mixin.py:115} INFO - [2023-07-11 19:43:54,292] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:54,688] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:43:54,710] {logging_mixin.py:115} INFO - [2023-07-11 19:43:54,709] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:43:54,735] {logging_mixin.py:115} INFO - [2023-07-11 19:43:54,734] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:43:54,753] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.466 seconds
[2023-07-11 19:44:05,412] {processor.py:153} INFO - Started process (PID=773) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:05,412] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:44:05,413] {logging_mixin.py:115} INFO - [2023-07-11 19:44:05,413] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:05,942] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:05,975] {logging_mixin.py:115} INFO - [2023-07-11 19:44:05,974] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:44:06,007] {logging_mixin.py:115} INFO - [2023-07-11 19:44:06,007] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:44:06,025] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.617 seconds
[2023-07-11 19:44:16,537] {processor.py:153} INFO - Started process (PID=784) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:16,545] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:44:16,546] {logging_mixin.py:115} INFO - [2023-07-11 19:44:16,546] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:16,916] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:16,937] {logging_mixin.py:115} INFO - [2023-07-11 19:44:16,937] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:44:16,961] {logging_mixin.py:115} INFO - [2023-07-11 19:44:16,961] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:44:16,982] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.450 seconds
[2023-07-11 19:44:27,663] {processor.py:153} INFO - Started process (PID=795) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:27,663] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:44:27,664] {logging_mixin.py:115} INFO - [2023-07-11 19:44:27,664] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:28,075] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:28,095] {logging_mixin.py:115} INFO - [2023-07-11 19:44:28,094] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:44:28,118] {logging_mixin.py:115} INFO - [2023-07-11 19:44:28,118] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:44:28,138] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.479 seconds
[2023-07-11 19:44:38,801] {processor.py:153} INFO - Started process (PID=806) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:38,802] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:44:38,803] {logging_mixin.py:115} INFO - [2023-07-11 19:44:38,802] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:39,195] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:39,218] {logging_mixin.py:115} INFO - [2023-07-11 19:44:39,217] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:44:39,240] {logging_mixin.py:115} INFO - [2023-07-11 19:44:39,240] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:44:39,251] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.456 seconds
[2023-07-11 19:44:49,914] {processor.py:153} INFO - Started process (PID=817) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:49,915] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:44:49,916] {logging_mixin.py:115} INFO - [2023-07-11 19:44:49,916] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:50,258] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:44:50,278] {logging_mixin.py:115} INFO - [2023-07-11 19:44:50,278] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:44:50,299] {logging_mixin.py:115} INFO - [2023-07-11 19:44:50,299] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:44:50,327] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.416 seconds
[2023-07-11 19:45:01,047] {processor.py:153} INFO - Started process (PID=828) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:01,048] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:01,049] {logging_mixin.py:115} INFO - [2023-07-11 19:45:01,049] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:01,402] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:01,424] {logging_mixin.py:115} INFO - [2023-07-11 19:45:01,423] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:01,445] {logging_mixin.py:115} INFO - [2023-07-11 19:45:01,445] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:01,461] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.418 seconds
[2023-07-11 19:45:12,174] {processor.py:153} INFO - Started process (PID=839) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:12,175] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:12,176] {logging_mixin.py:115} INFO - [2023-07-11 19:45:12,175] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:12,572] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:12,597] {logging_mixin.py:115} INFO - [2023-07-11 19:45:12,596] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:12,623] {logging_mixin.py:115} INFO - [2023-07-11 19:45:12,623] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:12,642] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.471 seconds
[2023-07-11 19:45:23,290] {processor.py:153} INFO - Started process (PID=850) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:23,291] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:23,292] {logging_mixin.py:115} INFO - [2023-07-11 19:45:23,292] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:23,662] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:23,682] {logging_mixin.py:115} INFO - [2023-07-11 19:45:23,682] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:23,706] {logging_mixin.py:115} INFO - [2023-07-11 19:45:23,706] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:23,721] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.435 seconds
[2023-07-11 19:45:34,523] {processor.py:153} INFO - Started process (PID=866) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:34,524] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:34,525] {logging_mixin.py:115} INFO - [2023-07-11 19:45:34,524] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:34,950] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:34,992] {logging_mixin.py:115} INFO - [2023-07-11 19:45:34,991] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:35,036] {logging_mixin.py:115} INFO - [2023-07-11 19:45:35,035] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:35,056] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.536 seconds
[2023-07-11 19:45:45,662] {processor.py:153} INFO - Started process (PID=877) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:45,665] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:45,667] {logging_mixin.py:115} INFO - [2023-07-11 19:45:45,667] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:46,101] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:46,125] {logging_mixin.py:115} INFO - [2023-07-11 19:45:46,124] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:46,149] {logging_mixin.py:115} INFO - [2023-07-11 19:45:46,149] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:46,164] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.508 seconds
[2023-07-11 19:45:56,776] {processor.py:153} INFO - Started process (PID=888) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:56,777] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:45:56,777] {logging_mixin.py:115} INFO - [2023-07-11 19:45:56,777] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:57,156] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:45:57,177] {logging_mixin.py:115} INFO - [2023-07-11 19:45:57,177] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:45:57,201] {logging_mixin.py:115} INFO - [2023-07-11 19:45:57,200] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:45:57,212] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.440 seconds
[2023-07-11 19:46:07,902] {processor.py:153} INFO - Started process (PID=899) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:07,911] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:46:07,913] {logging_mixin.py:115} INFO - [2023-07-11 19:46:07,913] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:08,302] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:08,324] {logging_mixin.py:115} INFO - [2023-07-11 19:46:08,323] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:46:08,348] {logging_mixin.py:115} INFO - [2023-07-11 19:46:08,347] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:46:08,384] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.487 seconds
[2023-07-11 19:46:19,127] {processor.py:153} INFO - Started process (PID=910) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:19,128] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:46:19,128] {logging_mixin.py:115} INFO - [2023-07-11 19:46:19,128] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:19,490] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:19,510] {logging_mixin.py:115} INFO - [2023-07-11 19:46:19,509] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:46:19,531] {logging_mixin.py:115} INFO - [2023-07-11 19:46:19,531] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:46:19,581] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.457 seconds
[2023-07-11 19:46:30,290] {processor.py:153} INFO - Started process (PID=921) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:30,290] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:46:30,291] {logging_mixin.py:115} INFO - [2023-07-11 19:46:30,291] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:30,693] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:30,716] {logging_mixin.py:115} INFO - [2023-07-11 19:46:30,716] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:46:30,742] {logging_mixin.py:115} INFO - [2023-07-11 19:46:30,742] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:46:30,776] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.492 seconds
[2023-07-11 19:46:41,414] {processor.py:153} INFO - Started process (PID=932) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:41,418] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:46:41,419] {logging_mixin.py:115} INFO - [2023-07-11 19:46:41,419] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:42,037] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:42,071] {logging_mixin.py:115} INFO - [2023-07-11 19:46:42,070] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:46:42,106] {logging_mixin.py:115} INFO - [2023-07-11 19:46:42,106] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:46:42,136] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.727 seconds
[2023-07-11 19:46:52,531] {processor.py:153} INFO - Started process (PID=943) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:52,532] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:46:52,532] {logging_mixin.py:115} INFO - [2023-07-11 19:46:52,532] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:53,012] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:46:53,061] {logging_mixin.py:115} INFO - [2023-07-11 19:46:53,058] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:46:53,108] {logging_mixin.py:115} INFO - [2023-07-11 19:46:53,108] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:46:53,136] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.608 seconds
[2023-07-11 19:47:03,732] {processor.py:153} INFO - Started process (PID=954) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:03,732] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:03,733] {logging_mixin.py:115} INFO - [2023-07-11 19:47:03,733] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:04,179] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:04,227] {logging_mixin.py:115} INFO - [2023-07-11 19:47:04,227] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:47:04,276] {logging_mixin.py:115} INFO - [2023-07-11 19:47:04,276] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:47:04,300] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.572 seconds
[2023-07-11 19:47:14,882] {processor.py:153} INFO - Started process (PID=965) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:14,884] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:14,885] {logging_mixin.py:115} INFO - [2023-07-11 19:47:14,884] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:15,286] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:15,312] {logging_mixin.py:115} INFO - [2023-07-11 19:47:15,311] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:47:15,334] {logging_mixin.py:115} INFO - [2023-07-11 19:47:15,334] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:47:15,346] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.470 seconds
[2023-07-11 19:47:26,141] {processor.py:153} INFO - Started process (PID=981) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:26,142] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:26,142] {logging_mixin.py:115} INFO - [2023-07-11 19:47:26,142] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:26,518] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:26,540] {logging_mixin.py:115} INFO - [2023-07-11 19:47:26,539] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:47:26,563] {logging_mixin.py:115} INFO - [2023-07-11 19:47:26,563] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:47:26,581] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.443 seconds
[2023-07-11 19:47:37,301] {processor.py:153} INFO - Started process (PID=992) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:37,302] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:37,303] {logging_mixin.py:115} INFO - [2023-07-11 19:47:37,303] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:37,748] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:37,775] {logging_mixin.py:115} INFO - [2023-07-11 19:47:37,775] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:47:37,802] {logging_mixin.py:115} INFO - [2023-07-11 19:47:37,802] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:47:37,821] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.529 seconds
[2023-07-11 19:47:48,398] {processor.py:153} INFO - Started process (PID=1003) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:48,398] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:48,399] {logging_mixin.py:115} INFO - [2023-07-11 19:47:48,399] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:48,903] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:48,928] {logging_mixin.py:115} INFO - [2023-07-11 19:47:48,928] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:47:48,956] {logging_mixin.py:115} INFO - [2023-07-11 19:47:48,956] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:47:48,971] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.577 seconds
[2023-07-11 19:47:59,518] {processor.py:153} INFO - Started process (PID=1014) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:59,522] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:47:59,522] {logging_mixin.py:115} INFO - [2023-07-11 19:47:59,522] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:47:59,989] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:00,033] {logging_mixin.py:115} INFO - [2023-07-11 19:48:00,032] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:00,065] {logging_mixin.py:115} INFO - [2023-07-11 19:48:00,065] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:00,090] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.576 seconds
[2023-07-11 19:48:10,647] {processor.py:153} INFO - Started process (PID=1025) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:10,648] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:48:10,648] {logging_mixin.py:115} INFO - [2023-07-11 19:48:10,648] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:11,139] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:11,167] {logging_mixin.py:115} INFO - [2023-07-11 19:48:11,167] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:11,192] {logging_mixin.py:115} INFO - [2023-07-11 19:48:11,192] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:11,205] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.562 seconds
[2023-07-11 19:48:21,774] {processor.py:153} INFO - Started process (PID=1036) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:21,774] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:48:21,775] {logging_mixin.py:115} INFO - [2023-07-11 19:48:21,775] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:22,175] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:22,197] {logging_mixin.py:115} INFO - [2023-07-11 19:48:22,196] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:22,223] {logging_mixin.py:115} INFO - [2023-07-11 19:48:22,223] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:22,241] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.471 seconds
[2023-07-11 19:48:32,908] {processor.py:153} INFO - Started process (PID=1047) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:32,909] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:48:32,909] {logging_mixin.py:115} INFO - [2023-07-11 19:48:32,909] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:33,294] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:33,317] {logging_mixin.py:115} INFO - [2023-07-11 19:48:33,317] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:33,342] {logging_mixin.py:115} INFO - [2023-07-11 19:48:33,342] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:33,362] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.457 seconds
[2023-07-11 19:48:44,045] {processor.py:153} INFO - Started process (PID=1058) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:44,047] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:48:44,047] {logging_mixin.py:115} INFO - [2023-07-11 19:48:44,047] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:44,393] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:44,414] {logging_mixin.py:115} INFO - [2023-07-11 19:48:44,414] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:44,438] {logging_mixin.py:115} INFO - [2023-07-11 19:48:44,437] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:44,450] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.409 seconds
[2023-07-11 19:48:55,201] {processor.py:153} INFO - Started process (PID=1069) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:55,202] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:48:55,204] {logging_mixin.py:115} INFO - [2023-07-11 19:48:55,204] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:55,649] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:48:55,684] {logging_mixin.py:115} INFO - [2023-07-11 19:48:55,683] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:48:55,718] {logging_mixin.py:115} INFO - [2023-07-11 19:48:55,718] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:48:55,736] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.541 seconds
[2023-07-11 19:49:06,340] {processor.py:153} INFO - Started process (PID=1080) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:06,341] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:49:06,342] {logging_mixin.py:115} INFO - [2023-07-11 19:49:06,341] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:06,850] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:06,880] {logging_mixin.py:115} INFO - [2023-07-11 19:49:06,879] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:49:06,909] {logging_mixin.py:115} INFO - [2023-07-11 19:49:06,909] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:49:06,927] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.592 seconds
[2023-07-11 19:49:17,673] {processor.py:153} INFO - Started process (PID=1096) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:17,677] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:49:17,678] {logging_mixin.py:115} INFO - [2023-07-11 19:49:17,678] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:18,061] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:18,088] {logging_mixin.py:115} INFO - [2023-07-11 19:49:18,087] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:49:18,115] {logging_mixin.py:115} INFO - [2023-07-11 19:49:18,115] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:49:18,133] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.464 seconds
[2023-07-11 19:49:28,804] {processor.py:153} INFO - Started process (PID=1107) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:28,804] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:49:28,805] {logging_mixin.py:115} INFO - [2023-07-11 19:49:28,805] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:29,272] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:29,341] {logging_mixin.py:115} INFO - [2023-07-11 19:49:29,341] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:49:29,382] {logging_mixin.py:115} INFO - [2023-07-11 19:49:29,382] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:49:29,393] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.593 seconds
[2023-07-11 19:49:39,948] {processor.py:153} INFO - Started process (PID=1118) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:39,948] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:49:39,949] {logging_mixin.py:115} INFO - [2023-07-11 19:49:39,949] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:40,287] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:40,309] {logging_mixin.py:115} INFO - [2023-07-11 19:49:40,308] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:49:40,330] {logging_mixin.py:115} INFO - [2023-07-11 19:49:40,329] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:49:40,345] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.401 seconds
[2023-07-11 19:49:51,089] {processor.py:153} INFO - Started process (PID=1129) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:51,090] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:49:51,090] {logging_mixin.py:115} INFO - [2023-07-11 19:49:51,090] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:51,521] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:49:51,542] {logging_mixin.py:115} INFO - [2023-07-11 19:49:51,542] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:49:51,567] {logging_mixin.py:115} INFO - [2023-07-11 19:49:51,567] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:49:51,585] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.501 seconds
[2023-07-11 19:50:02,213] {processor.py:153} INFO - Started process (PID=1140) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:02,214] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:02,214] {logging_mixin.py:115} INFO - [2023-07-11 19:50:02,214] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:02,602] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:02,622] {logging_mixin.py:115} INFO - [2023-07-11 19:50:02,622] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:02,645] {logging_mixin.py:115} INFO - [2023-07-11 19:50:02,645] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:02,660] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.451 seconds
[2023-07-11 19:50:13,364] {processor.py:153} INFO - Started process (PID=1151) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:13,365] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:13,365] {logging_mixin.py:115} INFO - [2023-07-11 19:50:13,365] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:13,750] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:13,771] {logging_mixin.py:115} INFO - [2023-07-11 19:50:13,771] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:13,794] {logging_mixin.py:115} INFO - [2023-07-11 19:50:13,793] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:13,808] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.447 seconds
[2023-07-11 19:50:24,609] {processor.py:153} INFO - Started process (PID=1162) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:24,610] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:24,610] {logging_mixin.py:115} INFO - [2023-07-11 19:50:24,610] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:25,041] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:25,069] {logging_mixin.py:115} INFO - [2023-07-11 19:50:25,069] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:25,096] {logging_mixin.py:115} INFO - [2023-07-11 19:50:25,096] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:25,107] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.501 seconds
[2023-07-11 19:50:35,755] {processor.py:153} INFO - Started process (PID=1173) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:35,759] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:35,760] {logging_mixin.py:115} INFO - [2023-07-11 19:50:35,760] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:36,189] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:36,218] {logging_mixin.py:115} INFO - [2023-07-11 19:50:36,217] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:36,243] {logging_mixin.py:115} INFO - [2023-07-11 19:50:36,243] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:36,260] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.508 seconds
[2023-07-11 19:50:46,885] {processor.py:153} INFO - Started process (PID=1184) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:46,886] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:46,887] {logging_mixin.py:115} INFO - [2023-07-11 19:50:46,887] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:47,249] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:47,270] {logging_mixin.py:115} INFO - [2023-07-11 19:50:47,270] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:47,294] {logging_mixin.py:115} INFO - [2023-07-11 19:50:47,294] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:47,311] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.429 seconds
[2023-07-11 19:50:58,019] {processor.py:153} INFO - Started process (PID=1195) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:58,019] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:50:58,020] {logging_mixin.py:115} INFO - [2023-07-11 19:50:58,020] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:58,413] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:50:58,433] {logging_mixin.py:115} INFO - [2023-07-11 19:50:58,433] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:50:58,455] {logging_mixin.py:115} INFO - [2023-07-11 19:50:58,454] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:50:58,469] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.454 seconds
[2023-07-11 19:51:09,252] {processor.py:153} INFO - Started process (PID=1211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:09,253] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:51:09,253] {logging_mixin.py:115} INFO - [2023-07-11 19:51:09,253] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:09,611] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:09,633] {logging_mixin.py:115} INFO - [2023-07-11 19:51:09,633] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:51:09,655] {logging_mixin.py:115} INFO - [2023-07-11 19:51:09,655] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:51:09,681] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.432 seconds
[2023-07-11 19:51:12,711] {processor.py:153} INFO - Started process (PID=1217) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:12,712] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:51:12,713] {logging_mixin.py:115} INFO - [2023-07-11 19:51:12,713] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:13,112] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:13,134] {logging_mixin.py:115} INFO - [2023-07-11 19:51:13,134] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:51:13,157] {logging_mixin.py:115} INFO - [2023-07-11 19:51:13,156] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:51:13,174] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.466 seconds
[2023-07-11 19:51:48,610] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:48,629] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:51:48,630] {logging_mixin.py:115} INFO - [2023-07-11 19:51:48,630] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:49,222] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:49,254] {logging_mixin.py:115} INFO - [2023-07-11 19:51:49,254] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:51:49,284] {logging_mixin.py:115} INFO - [2023-07-11 19:51:49,284] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:51:49,305] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.701 seconds
[2023-07-11 19:51:59,905] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:51:59,905] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:51:59,906] {logging_mixin.py:115} INFO - [2023-07-11 19:51:59,906] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:00,303] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:00,327] {logging_mixin.py:115} INFO - [2023-07-11 19:52:00,326] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:00,353] {logging_mixin.py:115} INFO - [2023-07-11 19:52:00,353] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:00,371] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.470 seconds
[2023-07-11 19:52:11,077] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:11,077] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:52:11,078] {logging_mixin.py:115} INFO - [2023-07-11 19:52:11,078] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:11,544] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:11,573] {logging_mixin.py:115} INFO - [2023-07-11 19:52:11,573] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:11,604] {logging_mixin.py:115} INFO - [2023-07-11 19:52:11,604] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:11,624] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.551 seconds
[2023-07-11 19:52:22,246] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:22,250] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:52:22,251] {logging_mixin.py:115} INFO - [2023-07-11 19:52:22,251] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:22,663] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:22,684] {logging_mixin.py:115} INFO - [2023-07-11 19:52:22,684] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:22,718] {logging_mixin.py:115} INFO - [2023-07-11 19:52:22,718] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:22,738] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.495 seconds
[2023-07-11 19:52:33,381] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:33,382] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:52:33,384] {logging_mixin.py:115} INFO - [2023-07-11 19:52:33,384] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:33,824] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:33,846] {logging_mixin.py:115} INFO - [2023-07-11 19:52:33,846] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:33,872] {logging_mixin.py:115} INFO - [2023-07-11 19:52:33,872] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:33,888] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.512 seconds
[2023-07-11 19:52:44,540] {processor.py:153} INFO - Started process (PID=233) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:44,541] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:52:44,542] {logging_mixin.py:115} INFO - [2023-07-11 19:52:44,541] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:44,916] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:44,938] {logging_mixin.py:115} INFO - [2023-07-11 19:52:44,938] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:44,961] {logging_mixin.py:115} INFO - [2023-07-11 19:52:44,961] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:44,975] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.439 seconds
[2023-07-11 19:52:55,687] {processor.py:153} INFO - Started process (PID=244) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:55,687] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:52:55,688] {logging_mixin.py:115} INFO - [2023-07-11 19:52:55,688] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:56,120] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:52:56,144] {logging_mixin.py:115} INFO - [2023-07-11 19:52:56,144] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:52:56,172] {logging_mixin.py:115} INFO - [2023-07-11 19:52:56,172] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:52:56,190] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.508 seconds
[2023-07-11 19:53:06,851] {processor.py:153} INFO - Started process (PID=263) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:06,855] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:53:06,856] {logging_mixin.py:115} INFO - [2023-07-11 19:53:06,856] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:07,457] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:07,489] {logging_mixin.py:115} INFO - [2023-07-11 19:53:07,488] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:53:07,524] {logging_mixin.py:115} INFO - [2023-07-11 19:53:07,524] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:53:07,539] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.695 seconds
[2023-07-11 19:53:17,981] {processor.py:153} INFO - Started process (PID=278) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:17,982] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:53:17,983] {logging_mixin.py:115} INFO - [2023-07-11 19:53:17,983] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:18,750] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:18,778] {logging_mixin.py:115} INFO - [2023-07-11 19:53:18,778] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:53:18,809] {logging_mixin.py:115} INFO - [2023-07-11 19:53:18,809] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:53:18,829] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.855 seconds
[2023-07-11 19:53:29,111] {processor.py:153} INFO - Started process (PID=289) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:29,112] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:53:29,113] {logging_mixin.py:115} INFO - [2023-07-11 19:53:29,113] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:29,477] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:29,497] {logging_mixin.py:115} INFO - [2023-07-11 19:53:29,496] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:53:29,518] {logging_mixin.py:115} INFO - [2023-07-11 19:53:29,518] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:53:29,533] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.426 seconds
[2023-07-11 19:53:40,263] {processor.py:153} INFO - Started process (PID=300) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:40,267] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:53:40,268] {logging_mixin.py:115} INFO - [2023-07-11 19:53:40,268] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:40,686] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:40,708] {logging_mixin.py:115} INFO - [2023-07-11 19:53:40,707] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:53:40,733] {logging_mixin.py:115} INFO - [2023-07-11 19:53:40,733] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:53:40,749] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.489 seconds
[2023-07-11 19:53:51,513] {processor.py:153} INFO - Started process (PID=316) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:51,514] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:53:51,515] {logging_mixin.py:115} INFO - [2023-07-11 19:53:51,515] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:51,898] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:53:51,921] {logging_mixin.py:115} INFO - [2023-07-11 19:53:51,920] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:53:51,948] {logging_mixin.py:115} INFO - [2023-07-11 19:53:51,947] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:53:51,967] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.457 seconds
[2023-07-11 19:54:02,665] {processor.py:153} INFO - Started process (PID=327) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:02,665] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:02,666] {logging_mixin.py:115} INFO - [2023-07-11 19:54:02,666] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:03,051] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:03,072] {logging_mixin.py:115} INFO - [2023-07-11 19:54:03,071] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:03,095] {logging_mixin.py:115} INFO - [2023-07-11 19:54:03,095] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:03,111] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.450 seconds
[2023-07-11 19:54:13,791] {processor.py:153} INFO - Started process (PID=338) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:13,795] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:13,796] {logging_mixin.py:115} INFO - [2023-07-11 19:54:13,796] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:14,146] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:14,166] {logging_mixin.py:115} INFO - [2023-07-11 19:54:14,166] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:14,188] {logging_mixin.py:115} INFO - [2023-07-11 19:54:14,188] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:14,203] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.418 seconds
[2023-07-11 19:54:25,008] {processor.py:153} INFO - Started process (PID=349) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:25,009] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:25,009] {logging_mixin.py:115} INFO - [2023-07-11 19:54:25,009] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:25,339] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:25,359] {logging_mixin.py:115} INFO - [2023-07-11 19:54:25,359] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:25,385] {logging_mixin.py:115} INFO - [2023-07-11 19:54:25,385] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:25,404] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.400 seconds
[2023-07-11 19:54:36,172] {processor.py:153} INFO - Started process (PID=360) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:36,173] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:36,175] {logging_mixin.py:115} INFO - [2023-07-11 19:54:36,174] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:37,057] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:37,089] {logging_mixin.py:115} INFO - [2023-07-11 19:54:37,088] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:37,128] {logging_mixin.py:115} INFO - [2023-07-11 19:54:37,127] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:37,155] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.990 seconds
[2023-07-11 19:54:47,211] {processor.py:153} INFO - Started process (PID=371) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:47,211] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:47,212] {logging_mixin.py:115} INFO - [2023-07-11 19:54:47,212] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:47,645] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:47,668] {logging_mixin.py:115} INFO - [2023-07-11 19:54:47,667] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:47,695] {logging_mixin.py:115} INFO - [2023-07-11 19:54:47,695] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:47,711] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.504 seconds
[2023-07-11 19:54:58,346] {processor.py:153} INFO - Started process (PID=382) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:58,347] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:54:58,347] {logging_mixin.py:115} INFO - [2023-07-11 19:54:58,347] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:58,671] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:54:58,690] {logging_mixin.py:115} INFO - [2023-07-11 19:54:58,690] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:54:58,711] {logging_mixin.py:115} INFO - [2023-07-11 19:54:58,711] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:54:58,726] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.385 seconds
[2023-07-11 19:55:09,480] {processor.py:153} INFO - Started process (PID=393) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:09,481] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:55:09,483] {logging_mixin.py:115} INFO - [2023-07-11 19:55:09,483] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:09,869] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:09,904] {logging_mixin.py:115} INFO - [2023-07-11 19:55:09,904] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:55:09,936] {logging_mixin.py:115} INFO - [2023-07-11 19:55:09,936] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:55:09,957] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.480 seconds
[2023-07-11 19:55:20,743] {processor.py:153} INFO - Started process (PID=404) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:20,744] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:55:20,744] {logging_mixin.py:115} INFO - [2023-07-11 19:55:20,744] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:21,105] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:21,125] {logging_mixin.py:115} INFO - [2023-07-11 19:55:21,125] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:55:21,151] {logging_mixin.py:115} INFO - [2023-07-11 19:55:21,151] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:55:21,168] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.428 seconds
[2023-07-11 19:55:31,872] {processor.py:153} INFO - Started process (PID=415) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:31,873] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:55:31,874] {logging_mixin.py:115} INFO - [2023-07-11 19:55:31,873] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:32,629] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:32,687] {logging_mixin.py:115} INFO - [2023-07-11 19:55:32,686] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:55:32,763] {logging_mixin.py:115} INFO - [2023-07-11 19:55:32,763] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:55:32,790] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.924 seconds
[2023-07-11 19:55:42,985] {processor.py:153} INFO - Started process (PID=426) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:42,985] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:55:42,986] {logging_mixin.py:115} INFO - [2023-07-11 19:55:42,986] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:43,680] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:55:43,739] {logging_mixin.py:115} INFO - [2023-07-11 19:55:43,738] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:55:43,800] {logging_mixin.py:115} INFO - [2023-07-11 19:55:43,800] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:55:43,833] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.852 seconds
[2023-07-11 19:56:22,933] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:22,938] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:56:22,939] {logging_mixin.py:115} INFO - [2023-07-11 19:56:22,939] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:25,562] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:25,629] {logging_mixin.py:115} INFO - [2023-07-11 19:56:25,628] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:56:25,728] {logging_mixin.py:115} INFO - [2023-07-11 19:56:25,727] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:56:25,758] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.834 seconds
[2023-07-11 19:56:36,197] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:36,202] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:56:36,206] {logging_mixin.py:115} INFO - [2023-07-11 19:56:36,205] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:37,429] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:37,486] {logging_mixin.py:115} INFO - [2023-07-11 19:56:37,485] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:56:37,552] {logging_mixin.py:115} INFO - [2023-07-11 19:56:37,551] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:56:37,601] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.413 seconds
[2023-07-11 19:56:47,680] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:47,681] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:56:47,682] {logging_mixin.py:115} INFO - [2023-07-11 19:56:47,682] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:48,118] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:48,143] {logging_mixin.py:115} INFO - [2023-07-11 19:56:48,143] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:56:48,170] {logging_mixin.py:115} INFO - [2023-07-11 19:56:48,170] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:56:48,188] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.512 seconds
[2023-07-11 19:56:58,766] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:58,770] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:56:58,771] {logging_mixin.py:115} INFO - [2023-07-11 19:56:58,771] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:59,179] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:56:59,209] {logging_mixin.py:115} INFO - [2023-07-11 19:56:59,208] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:56:59,238] {logging_mixin.py:115} INFO - [2023-07-11 19:56:59,238] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:56:59,252] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.491 seconds
[2023-07-11 19:57:09,880] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:09,880] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:57:09,882] {logging_mixin.py:115} INFO - [2023-07-11 19:57:09,882] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:10,575] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:10,601] {logging_mixin.py:115} INFO - [2023-07-11 19:57:10,601] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:57:10,628] {logging_mixin.py:115} INFO - [2023-07-11 19:57:10,628] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:57:10,646] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.770 seconds
[2023-07-11 19:57:21,004] {processor.py:153} INFO - Started process (PID=245) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:21,005] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:57:21,006] {logging_mixin.py:115} INFO - [2023-07-11 19:57:21,006] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:21,456] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:21,480] {logging_mixin.py:115} INFO - [2023-07-11 19:57:21,480] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:57:21,506] {logging_mixin.py:115} INFO - [2023-07-11 19:57:21,506] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:57:21,525] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.525 seconds
[2023-07-11 19:57:32,128] {processor.py:153} INFO - Started process (PID=256) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:32,148] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:57:32,149] {logging_mixin.py:115} INFO - [2023-07-11 19:57:32,149] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:32,568] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:32,588] {logging_mixin.py:115} INFO - [2023-07-11 19:57:32,587] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:57:32,609] {logging_mixin.py:115} INFO - [2023-07-11 19:57:32,609] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:57:32,624] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.500 seconds
[2023-07-11 19:57:43,246] {processor.py:153} INFO - Started process (PID=267) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:43,246] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:57:43,247] {logging_mixin.py:115} INFO - [2023-07-11 19:57:43,247] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:43,741] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:43,802] {logging_mixin.py:115} INFO - [2023-07-11 19:57:43,801] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:57:43,862] {logging_mixin.py:115} INFO - [2023-07-11 19:57:43,862] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:57:43,896] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.655 seconds
[2023-07-11 19:57:54,579] {processor.py:153} INFO - Started process (PID=278) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:54,580] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:57:54,581] {logging_mixin.py:115} INFO - [2023-07-11 19:57:54,581] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:55,078] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:57:55,107] {logging_mixin.py:115} INFO - [2023-07-11 19:57:55,106] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:57:55,142] {logging_mixin.py:115} INFO - [2023-07-11 19:57:55,142] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:57:55,158] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.584 seconds
[2023-07-11 19:58:05,897] {processor.py:153} INFO - Started process (PID=294) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:05,898] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:58:05,899] {logging_mixin.py:115} INFO - [2023-07-11 19:58:05,899] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:06,382] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:06,409] {logging_mixin.py:115} INFO - [2023-07-11 19:58:06,408] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:58:06,436] {logging_mixin.py:115} INFO - [2023-07-11 19:58:06,436] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:58:06,670] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.777 seconds
[2023-07-11 19:58:17,083] {processor.py:153} INFO - Started process (PID=305) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:17,084] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:58:17,085] {logging_mixin.py:115} INFO - [2023-07-11 19:58:17,085] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:17,827] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:17,870] {logging_mixin.py:115} INFO - [2023-07-11 19:58:17,869] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:58:17,914] {logging_mixin.py:115} INFO - [2023-07-11 19:58:17,913] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:58:17,935] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.861 seconds
[2023-07-11 19:58:28,261] {processor.py:153} INFO - Started process (PID=319) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:28,262] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:58:28,263] {logging_mixin.py:115} INFO - [2023-07-11 19:58:28,262] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:29,043] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:29,075] {logging_mixin.py:115} INFO - [2023-07-11 19:58:29,075] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:58:29,112] {logging_mixin.py:115} INFO - [2023-07-11 19:58:29,112] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:58:29,140] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.883 seconds
[2023-07-11 19:58:39,499] {processor.py:153} INFO - Started process (PID=333) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:39,500] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:58:39,501] {logging_mixin.py:115} INFO - [2023-07-11 19:58:39,501] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:39,993] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:40,021] {logging_mixin.py:115} INFO - [2023-07-11 19:58:40,021] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:58:40,052] {logging_mixin.py:115} INFO - [2023-07-11 19:58:40,051] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:58:40,072] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.577 seconds
[2023-07-11 19:58:50,777] {processor.py:153} INFO - Started process (PID=353) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:50,778] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:58:50,840] {logging_mixin.py:115} INFO - [2023-07-11 19:58:50,840] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:51,269] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:58:51,295] {logging_mixin.py:115} INFO - [2023-07-11 19:58:51,294] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:58:51,323] {logging_mixin.py:115} INFO - [2023-07-11 19:58:51,322] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:58:51,337] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.563 seconds
[2023-07-11 19:59:02,125] {processor.py:153} INFO - Started process (PID=364) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:02,126] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:02,127] {logging_mixin.py:115} INFO - [2023-07-11 19:59:02,126] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:02,649] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:02,675] {logging_mixin.py:115} INFO - [2023-07-11 19:59:02,675] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:02,705] {logging_mixin.py:115} INFO - [2023-07-11 19:59:02,705] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:02,722] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.602 seconds
[2023-07-11 19:59:13,346] {processor.py:153} INFO - Started process (PID=375) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:13,348] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:13,349] {logging_mixin.py:115} INFO - [2023-07-11 19:59:13,349] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:13,912] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:13,939] {logging_mixin.py:115} INFO - [2023-07-11 19:59:13,939] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:13,969] {logging_mixin.py:115} INFO - [2023-07-11 19:59:13,969] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:13,986] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.648 seconds
[2023-07-11 19:59:24,447] {processor.py:153} INFO - Started process (PID=386) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:24,448] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:24,449] {logging_mixin.py:115} INFO - [2023-07-11 19:59:24,449] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:24,821] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:24,845] {logging_mixin.py:115} INFO - [2023-07-11 19:59:24,845] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:24,872] {logging_mixin.py:115} INFO - [2023-07-11 19:59:24,872] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:24,886] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.444 seconds
[2023-07-11 19:59:35,612] {processor.py:153} INFO - Started process (PID=397) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:35,613] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:35,613] {logging_mixin.py:115} INFO - [2023-07-11 19:59:35,613] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:35,995] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:36,016] {logging_mixin.py:115} INFO - [2023-07-11 19:59:36,016] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:36,041] {logging_mixin.py:115} INFO - [2023-07-11 19:59:36,041] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:36,057] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.449 seconds
[2023-07-11 19:59:46,684] {processor.py:153} INFO - Started process (PID=408) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:46,696] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:46,697] {logging_mixin.py:115} INFO - [2023-07-11 19:59:46,697] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:47,115] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:47,141] {logging_mixin.py:115} INFO - [2023-07-11 19:59:47,140] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:47,165] {logging_mixin.py:115} INFO - [2023-07-11 19:59:47,164] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:47,178] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.498 seconds
[2023-07-11 19:59:57,917] {processor.py:153} INFO - Started process (PID=424) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:57,918] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 19:59:57,919] {logging_mixin.py:115} INFO - [2023-07-11 19:59:57,919] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:58,314] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 19:59:58,337] {logging_mixin.py:115} INFO - [2023-07-11 19:59:58,337] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 19:59:58,363] {logging_mixin.py:115} INFO - [2023-07-11 19:59:58,363] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 19:59:58,379] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.465 seconds
[2023-07-11 20:00:09,039] {processor.py:153} INFO - Started process (PID=435) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:09,040] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:00:09,040] {logging_mixin.py:115} INFO - [2023-07-11 20:00:09,040] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:09,402] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:09,424] {logging_mixin.py:115} INFO - [2023-07-11 20:00:09,423] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:00:09,444] {logging_mixin.py:115} INFO - [2023-07-11 20:00:09,444] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:00:09,460] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.424 seconds
[2023-07-11 20:00:20,171] {processor.py:153} INFO - Started process (PID=446) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:20,172] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:00:20,172] {logging_mixin.py:115} INFO - [2023-07-11 20:00:20,172] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:20,531] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:20,558] {logging_mixin.py:115} INFO - [2023-07-11 20:00:20,557] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:00:20,582] {logging_mixin.py:115} INFO - [2023-07-11 20:00:20,582] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:00:20,596] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.428 seconds
[2023-07-11 20:00:31,308] {processor.py:153} INFO - Started process (PID=457) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:31,309] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:00:31,309] {logging_mixin.py:115} INFO - [2023-07-11 20:00:31,309] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:31,681] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:31,701] {logging_mixin.py:115} INFO - [2023-07-11 20:00:31,700] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:00:31,723] {logging_mixin.py:115} INFO - [2023-07-11 20:00:31,723] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:00:31,739] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.435 seconds
[2023-07-11 20:00:42,435] {processor.py:153} INFO - Started process (PID=468) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:42,436] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:00:42,436] {logging_mixin.py:115} INFO - [2023-07-11 20:00:42,436] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:42,826] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:42,849] {logging_mixin.py:115} INFO - [2023-07-11 20:00:42,848] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:00:42,871] {logging_mixin.py:115} INFO - [2023-07-11 20:00:42,870] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:00:42,886] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.454 seconds
[2023-07-11 20:00:53,665] {processor.py:153} INFO - Started process (PID=479) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:53,669] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:00:53,670] {logging_mixin.py:115} INFO - [2023-07-11 20:00:53,670] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:54,070] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:00:54,090] {logging_mixin.py:115} INFO - [2023-07-11 20:00:54,089] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:00:54,114] {logging_mixin.py:115} INFO - [2023-07-11 20:00:54,114] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:00:54,128] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.468 seconds
[2023-07-11 20:01:04,792] {processor.py:153} INFO - Started process (PID=490) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:04,793] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:01:04,793] {logging_mixin.py:115} INFO - [2023-07-11 20:01:04,793] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:05,164] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:05,185] {logging_mixin.py:115} INFO - [2023-07-11 20:01:05,185] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:01:05,207] {logging_mixin.py:115} INFO - [2023-07-11 20:01:05,207] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:01:05,224] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.436 seconds
[2023-07-11 20:01:15,919] {processor.py:153} INFO - Started process (PID=501) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:15,920] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:01:15,921] {logging_mixin.py:115} INFO - [2023-07-11 20:01:15,921] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:16,262] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:16,284] {logging_mixin.py:115} INFO - [2023-07-11 20:01:16,283] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:01:16,306] {logging_mixin.py:115} INFO - [2023-07-11 20:01:16,306] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:01:16,319] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.403 seconds
[2023-07-11 20:01:27,117] {processor.py:153} INFO - Started process (PID=512) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:27,121] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:01:27,122] {logging_mixin.py:115} INFO - [2023-07-11 20:01:27,122] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:27,566] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:27,587] {logging_mixin.py:115} INFO - [2023-07-11 20:01:27,586] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:01:27,611] {logging_mixin.py:115} INFO - [2023-07-11 20:01:27,611] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:01:27,627] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.516 seconds
[2023-07-11 20:01:38,164] {processor.py:153} INFO - Started process (PID=523) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:38,164] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:01:38,165] {logging_mixin.py:115} INFO - [2023-07-11 20:01:38,165] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:38,529] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:38,549] {logging_mixin.py:115} INFO - [2023-07-11 20:01:38,549] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:01:38,571] {logging_mixin.py:115} INFO - [2023-07-11 20:01:38,571] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:01:38,586] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.425 seconds
[2023-07-11 20:01:49,397] {processor.py:153} INFO - Started process (PID=539) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:49,397] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:01:49,398] {logging_mixin.py:115} INFO - [2023-07-11 20:01:49,398] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:49,747] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:01:49,769] {logging_mixin.py:115} INFO - [2023-07-11 20:01:49,769] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:01:49,791] {logging_mixin.py:115} INFO - [2023-07-11 20:01:49,791] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:01:49,806] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.413 seconds
[2023-07-11 20:02:00,523] {processor.py:153} INFO - Started process (PID=550) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:00,524] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:00,524] {logging_mixin.py:115} INFO - [2023-07-11 20:02:00,524] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:00,875] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:00,896] {logging_mixin.py:115} INFO - [2023-07-11 20:02:00,895] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:00,920] {logging_mixin.py:115} INFO - [2023-07-11 20:02:00,919] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:00,932] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.413 seconds
[2023-07-11 20:02:11,645] {processor.py:153} INFO - Started process (PID=561) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:11,646] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:11,647] {logging_mixin.py:115} INFO - [2023-07-11 20:02:11,647] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:12,234] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:12,278] {logging_mixin.py:115} INFO - [2023-07-11 20:02:12,277] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:12,333] {logging_mixin.py:115} INFO - [2023-07-11 20:02:12,333] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:12,355] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.715 seconds
[2023-07-11 20:02:22,824] {processor.py:153} INFO - Started process (PID=572) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:22,824] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:22,825] {logging_mixin.py:115} INFO - [2023-07-11 20:02:22,825] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:23,262] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:23,292] {logging_mixin.py:115} INFO - [2023-07-11 20:02:23,291] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:23,315] {logging_mixin.py:115} INFO - [2023-07-11 20:02:23,315] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:23,365] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.546 seconds
[2023-07-11 20:02:34,028] {processor.py:153} INFO - Started process (PID=583) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:34,045] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:34,046] {logging_mixin.py:115} INFO - [2023-07-11 20:02:34,046] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:34,409] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:34,430] {logging_mixin.py:115} INFO - [2023-07-11 20:02:34,430] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:34,452] {logging_mixin.py:115} INFO - [2023-07-11 20:02:34,452] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:34,466] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.441 seconds
[2023-07-11 20:02:45,157] {processor.py:153} INFO - Started process (PID=594) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:45,157] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:45,158] {logging_mixin.py:115} INFO - [2023-07-11 20:02:45,158] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:45,540] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:45,563] {logging_mixin.py:115} INFO - [2023-07-11 20:02:45,562] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:45,592] {logging_mixin.py:115} INFO - [2023-07-11 20:02:45,592] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:45,607] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.453 seconds
[2023-07-11 20:02:56,296] {processor.py:153} INFO - Started process (PID=605) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:56,297] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:02:56,298] {logging_mixin.py:115} INFO - [2023-07-11 20:02:56,298] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:56,845] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:02:56,886] {logging_mixin.py:115} INFO - [2023-07-11 20:02:56,885] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:02:56,943] {logging_mixin.py:115} INFO - [2023-07-11 20:02:56,943] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:02:56,975] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.686 seconds
[2023-07-11 20:03:07,493] {processor.py:153} INFO - Started process (PID=616) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:07,498] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:03:07,500] {logging_mixin.py:115} INFO - [2023-07-11 20:03:07,499] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:07,948] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:07,973] {logging_mixin.py:115} INFO - [2023-07-11 20:03:07,973] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:03:07,999] {logging_mixin.py:115} INFO - [2023-07-11 20:03:07,999] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:03:08,017] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.529 seconds
[2023-07-11 20:03:18,631] {processor.py:153} INFO - Started process (PID=627) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:18,631] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:03:18,632] {logging_mixin.py:115} INFO - [2023-07-11 20:03:18,632] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:19,066] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:19,089] {logging_mixin.py:115} INFO - [2023-07-11 20:03:19,089] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:03:19,114] {logging_mixin.py:115} INFO - [2023-07-11 20:03:19,114] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:03:19,134] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.508 seconds
[2023-07-11 20:03:29,772] {processor.py:153} INFO - Started process (PID=641) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:29,773] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:03:29,774] {logging_mixin.py:115} INFO - [2023-07-11 20:03:29,774] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:30,183] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:30,204] {logging_mixin.py:115} INFO - [2023-07-11 20:03:30,204] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:03:30,227] {logging_mixin.py:115} INFO - [2023-07-11 20:03:30,227] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:03:30,243] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.477 seconds
[2023-07-11 20:03:40,989] {processor.py:153} INFO - Started process (PID=657) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:40,990] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:03:40,991] {logging_mixin.py:115} INFO - [2023-07-11 20:03:40,991] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:41,338] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:41,359] {logging_mixin.py:115} INFO - [2023-07-11 20:03:41,359] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:03:41,381] {logging_mixin.py:115} INFO - [2023-07-11 20:03:41,381] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:03:41,393] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.410 seconds
[2023-07-11 20:03:52,115] {processor.py:153} INFO - Started process (PID=671) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:52,117] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:03:52,118] {logging_mixin.py:115} INFO - [2023-07-11 20:03:52,118] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:52,544] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:03:52,571] {logging_mixin.py:115} INFO - [2023-07-11 20:03:52,570] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:03:52,595] {logging_mixin.py:115} INFO - [2023-07-11 20:03:52,595] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:03:52,609] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.499 seconds
[2023-07-11 20:04:03,236] {processor.py:153} INFO - Started process (PID=682) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:03,237] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:03,237] {logging_mixin.py:115} INFO - [2023-07-11 20:04:03,237] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:03,592] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:03,614] {logging_mixin.py:115} INFO - [2023-07-11 20:04:03,613] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:03,636] {logging_mixin.py:115} INFO - [2023-07-11 20:04:03,636] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:03,651] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.418 seconds
[2023-07-11 20:04:14,357] {processor.py:153} INFO - Started process (PID=693) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:14,358] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:14,358] {logging_mixin.py:115} INFO - [2023-07-11 20:04:14,358] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:14,705] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:14,725] {logging_mixin.py:115} INFO - [2023-07-11 20:04:14,725] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:14,748] {logging_mixin.py:115} INFO - [2023-07-11 20:04:14,748] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:14,764] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.411 seconds
[2023-07-11 20:04:25,488] {processor.py:153} INFO - Started process (PID=704) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:25,489] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:25,490] {logging_mixin.py:115} INFO - [2023-07-11 20:04:25,490] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:25,849] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:25,871] {logging_mixin.py:115} INFO - [2023-07-11 20:04:25,870] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:25,895] {logging_mixin.py:115} INFO - [2023-07-11 20:04:25,895] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:25,911] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.427 seconds
[2023-07-11 20:04:36,628] {processor.py:153} INFO - Started process (PID=715) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:36,644] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:36,645] {logging_mixin.py:115} INFO - [2023-07-11 20:04:36,645] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:37,019] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:37,040] {logging_mixin.py:115} INFO - [2023-07-11 20:04:37,040] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:37,063] {logging_mixin.py:115} INFO - [2023-07-11 20:04:37,063] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:37,075] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.452 seconds
[2023-07-11 20:04:47,756] {processor.py:153} INFO - Started process (PID=726) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:47,757] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:47,757] {logging_mixin.py:115} INFO - [2023-07-11 20:04:47,757] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:48,230] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:48,259] {logging_mixin.py:115} INFO - [2023-07-11 20:04:48,259] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:48,287] {logging_mixin.py:115} INFO - [2023-07-11 20:04:48,287] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:48,303] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.551 seconds
[2023-07-11 20:04:51,908] {processor.py:153} INFO - Started process (PID=737) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:51,909] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:04:51,909] {logging_mixin.py:115} INFO - [2023-07-11 20:04:51,909] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:52,342] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:04:52,365] {logging_mixin.py:115} INFO - [2023-07-11 20:04:52,364] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:04:52,389] {logging_mixin.py:115} INFO - [2023-07-11 20:04:52,389] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:04:52,411] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.507 seconds
[2023-07-11 20:05:29,688] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:29,692] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:05:29,693] {logging_mixin.py:115} INFO - [2023-07-11 20:05:29,693] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:31,542] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:31,576] {logging_mixin.py:115} INFO - [2023-07-11 20:05:31,576] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:05:31,611] {logging_mixin.py:115} INFO - [2023-07-11 20:05:31,611] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:05:31,638] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.958 seconds
[2023-07-11 20:05:41,961] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:41,962] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:05:41,963] {logging_mixin.py:115} INFO - [2023-07-11 20:05:41,963] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:42,984] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:43,065] {logging_mixin.py:115} INFO - [2023-07-11 20:05:43,064] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:05:43,154] {logging_mixin.py:115} INFO - [2023-07-11 20:05:43,154] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:05:43,188] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.235 seconds
[2023-07-11 20:05:53,246] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:53,247] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:05:53,247] {logging_mixin.py:115} INFO - [2023-07-11 20:05:53,247] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:53,603] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:05:53,623] {logging_mixin.py:115} INFO - [2023-07-11 20:05:53,623] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:05:53,643] {logging_mixin.py:115} INFO - [2023-07-11 20:05:53,643] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:05:53,669] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.427 seconds
[2023-07-11 20:06:04,326] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:04,341] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:06:04,343] {logging_mixin.py:115} INFO - [2023-07-11 20:06:04,343] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:04,899] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:04,978] {logging_mixin.py:115} INFO - [2023-07-11 20:06:04,977] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:06:05,105] {logging_mixin.py:115} INFO - [2023-07-11 20:06:05,105] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:06:05,616] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.295 seconds
[2023-07-11 20:06:16,452] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:16,453] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:06:16,454] {logging_mixin.py:115} INFO - [2023-07-11 20:06:16,454] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:16,867] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:16,893] {logging_mixin.py:115} INFO - [2023-07-11 20:06:16,892] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:06:16,920] {logging_mixin.py:115} INFO - [2023-07-11 20:06:16,920] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:06:16,936] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.488 seconds
[2023-07-11 20:06:27,576] {processor.py:153} INFO - Started process (PID=233) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:27,576] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:06:27,577] {logging_mixin.py:115} INFO - [2023-07-11 20:06:27,577] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:28,096] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:28,121] {logging_mixin.py:115} INFO - [2023-07-11 20:06:28,121] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:06:28,148] {logging_mixin.py:115} INFO - [2023-07-11 20:06:28,147] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:06:28,168] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.596 seconds
[2023-07-11 20:06:38,728] {processor.py:153} INFO - Started process (PID=247) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:38,729] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:06:38,729] {logging_mixin.py:115} INFO - [2023-07-11 20:06:38,729] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:39,154] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:39,179] {logging_mixin.py:115} INFO - [2023-07-11 20:06:39,178] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:06:39,208] {logging_mixin.py:115} INFO - [2023-07-11 20:06:39,208] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:06:39,229] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.505 seconds
[2023-07-11 20:06:49,847] {processor.py:153} INFO - Started process (PID=267) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:49,848] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:06:49,849] {logging_mixin.py:115} INFO - [2023-07-11 20:06:49,849] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:50,235] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:06:50,257] {logging_mixin.py:115} INFO - [2023-07-11 20:06:50,257] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:06:50,283] {logging_mixin.py:115} INFO - [2023-07-11 20:06:50,283] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:06:50,300] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.457 seconds
[2023-07-11 20:07:00,993] {processor.py:153} INFO - Started process (PID=278) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:00,994] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:00,994] {logging_mixin.py:115} INFO - [2023-07-11 20:07:00,994] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:01,414] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:01,440] {logging_mixin.py:115} INFO - [2023-07-11 20:07:01,439] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:01,468] {logging_mixin.py:115} INFO - [2023-07-11 20:07:01,468] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:01,486] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.496 seconds
[2023-07-11 20:07:12,260] {processor.py:153} INFO - Started process (PID=294) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:12,261] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:12,262] {logging_mixin.py:115} INFO - [2023-07-11 20:07:12,262] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:12,881] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:12,935] {logging_mixin.py:115} INFO - [2023-07-11 20:07:12,933] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:12,998] {logging_mixin.py:115} INFO - [2023-07-11 20:07:12,998] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:13,043] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.788 seconds
[2023-07-11 20:07:23,412] {processor.py:153} INFO - Started process (PID=305) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:23,421] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:23,422] {logging_mixin.py:115} INFO - [2023-07-11 20:07:23,422] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:23,861] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:23,882] {logging_mixin.py:115} INFO - [2023-07-11 20:07:23,882] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:23,904] {logging_mixin.py:115} INFO - [2023-07-11 20:07:23,904] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:23,937] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.532 seconds
[2023-07-11 20:07:34,545] {processor.py:153} INFO - Started process (PID=316) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:34,545] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:34,546] {logging_mixin.py:115} INFO - [2023-07-11 20:07:34,546] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:34,919] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:34,942] {logging_mixin.py:115} INFO - [2023-07-11 20:07:34,942] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:34,965] {logging_mixin.py:115} INFO - [2023-07-11 20:07:34,965] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:34,987] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.445 seconds
[2023-07-11 20:07:45,671] {processor.py:153} INFO - Started process (PID=327) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:45,672] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:45,672] {logging_mixin.py:115} INFO - [2023-07-11 20:07:45,672] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:46,066] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:46,095] {logging_mixin.py:115} INFO - [2023-07-11 20:07:46,095] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:46,127] {logging_mixin.py:115} INFO - [2023-07-11 20:07:46,127] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:46,144] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.476 seconds
[2023-07-11 20:07:56,842] {processor.py:153} INFO - Started process (PID=338) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:56,848] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:07:56,849] {logging_mixin.py:115} INFO - [2023-07-11 20:07:56,848] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:57,216] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:07:57,236] {logging_mixin.py:115} INFO - [2023-07-11 20:07:57,236] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:07:57,260] {logging_mixin.py:115} INFO - [2023-07-11 20:07:57,260] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:07:57,277] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.438 seconds
[2023-07-11 20:08:07,984] {processor.py:153} INFO - Started process (PID=349) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:07,985] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:08:07,986] {logging_mixin.py:115} INFO - [2023-07-11 20:08:07,986] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:08,487] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:08,509] {logging_mixin.py:115} INFO - [2023-07-11 20:08:08,509] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:08:08,532] {logging_mixin.py:115} INFO - [2023-07-11 20:08:08,531] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:08:08,547] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.568 seconds
[2023-07-11 20:08:19,156] {processor.py:153} INFO - Started process (PID=360) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:19,157] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:08:19,158] {logging_mixin.py:115} INFO - [2023-07-11 20:08:19,158] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:19,781] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:19,811] {logging_mixin.py:115} INFO - [2023-07-11 20:08:19,810] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:08:19,878] {logging_mixin.py:115} INFO - [2023-07-11 20:08:19,877] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:08:19,919] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.772 seconds
[2023-07-11 20:08:30,328] {processor.py:153} INFO - Started process (PID=374) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:30,330] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:08:30,331] {logging_mixin.py:115} INFO - [2023-07-11 20:08:30,331] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:31,559] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:31,633] {logging_mixin.py:115} INFO - [2023-07-11 20:08:31,631] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:08:31,693] {logging_mixin.py:115} INFO - [2023-07-11 20:08:31,692] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:08:31,753] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.434 seconds
[2023-07-11 20:08:41,834] {processor.py:153} INFO - Started process (PID=385) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:41,835] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:08:41,836] {logging_mixin.py:115} INFO - [2023-07-11 20:08:41,836] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:42,479] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:42,517] {logging_mixin.py:115} INFO - [2023-07-11 20:08:42,516] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:08:42,562] {logging_mixin.py:115} INFO - [2023-07-11 20:08:42,562] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:08:42,588] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.760 seconds
[2023-07-11 20:08:52,862] {processor.py:153} INFO - Started process (PID=396) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:52,863] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:08:52,864] {logging_mixin.py:115} INFO - [2023-07-11 20:08:52,864] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:53,481] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:08:53,505] {logging_mixin.py:115} INFO - [2023-07-11 20:08:53,505] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:08:53,536] {logging_mixin.py:115} INFO - [2023-07-11 20:08:53,536] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:08:53,556] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.699 seconds
[2023-07-11 20:09:04,287] {processor.py:153} INFO - Started process (PID=412) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:04,287] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:09:04,288] {logging_mixin.py:115} INFO - [2023-07-11 20:09:04,288] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:04,976] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:05,037] {logging_mixin.py:115} INFO - [2023-07-11 20:09:05,037] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:09:05,117] {logging_mixin.py:115} INFO - [2023-07-11 20:09:05,117] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:09:05,139] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.857 seconds
[2023-07-11 20:09:15,427] {processor.py:153} INFO - Started process (PID=423) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:15,428] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:09:15,428] {logging_mixin.py:115} INFO - [2023-07-11 20:09:15,428] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:16,026] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:16,056] {logging_mixin.py:115} INFO - [2023-07-11 20:09:16,055] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:09:16,093] {logging_mixin.py:115} INFO - [2023-07-11 20:09:16,093] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:09:16,112] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.689 seconds
[2023-07-11 20:09:26,614] {processor.py:153} INFO - Started process (PID=434) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:26,615] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:09:26,615] {logging_mixin.py:115} INFO - [2023-07-11 20:09:26,615] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:27,079] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:27,107] {logging_mixin.py:115} INFO - [2023-07-11 20:09:27,107] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:09:27,138] {logging_mixin.py:115} INFO - [2023-07-11 20:09:27,138] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:09:27,155] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.544 seconds
[2023-07-11 20:09:37,915] {processor.py:153} INFO - Started process (PID=445) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:37,917] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:09:37,918] {logging_mixin.py:115} INFO - [2023-07-11 20:09:37,918] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:38,911] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:38,988] {logging_mixin.py:115} INFO - [2023-07-11 20:09:38,987] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:09:39,104] {logging_mixin.py:115} INFO - [2023-07-11 20:09:39,103] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:09:40,098] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 2.197 seconds
[2023-07-11 20:09:50,191] {processor.py:153} INFO - Started process (PID=456) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:50,192] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:09:50,192] {logging_mixin.py:115} INFO - [2023-07-11 20:09:50,192] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:50,620] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:09:50,645] {logging_mixin.py:115} INFO - [2023-07-11 20:09:50,644] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:09:50,675] {logging_mixin.py:115} INFO - [2023-07-11 20:09:50,675] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:09:50,695] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.508 seconds
[2023-07-11 20:10:01,251] {processor.py:153} INFO - Started process (PID=467) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:01,251] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:01,252] {logging_mixin.py:115} INFO - [2023-07-11 20:10:01,252] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:01,831] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:01,863] {logging_mixin.py:115} INFO - [2023-07-11 20:10:01,862] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:01,894] {logging_mixin.py:115} INFO - [2023-07-11 20:10:01,894] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:01,915] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.668 seconds
[2023-07-11 20:10:12,378] {processor.py:153} INFO - Started process (PID=478) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:12,382] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:12,382] {logging_mixin.py:115} INFO - [2023-07-11 20:10:12,382] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:12,776] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:12,801] {logging_mixin.py:115} INFO - [2023-07-11 20:10:12,801] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:12,824] {logging_mixin.py:115} INFO - [2023-07-11 20:10:12,824] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:12,840] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.465 seconds
[2023-07-11 20:10:23,527] {processor.py:153} INFO - Started process (PID=489) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:23,528] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:23,529] {logging_mixin.py:115} INFO - [2023-07-11 20:10:23,529] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:23,957] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:23,982] {logging_mixin.py:115} INFO - [2023-07-11 20:10:23,981] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:24,011] {logging_mixin.py:115} INFO - [2023-07-11 20:10:24,011] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:24,039] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.517 seconds
[2023-07-11 20:10:34,692] {processor.py:153} INFO - Started process (PID=500) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:34,692] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:34,693] {logging_mixin.py:115} INFO - [2023-07-11 20:10:34,693] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:35,072] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:35,093] {logging_mixin.py:115} INFO - [2023-07-11 20:10:35,093] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:35,114] {logging_mixin.py:115} INFO - [2023-07-11 20:10:35,114] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:35,126] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.439 seconds
[2023-07-11 20:10:45,934] {processor.py:153} INFO - Started process (PID=516) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:45,936] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:45,936] {logging_mixin.py:115} INFO - [2023-07-11 20:10:45,936] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:46,739] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:46,786] {logging_mixin.py:115} INFO - [2023-07-11 20:10:46,785] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:46,831] {logging_mixin.py:115} INFO - [2023-07-11 20:10:46,831] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:46,855] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.931 seconds
[2023-07-11 20:10:57,047] {processor.py:153} INFO - Started process (PID=527) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:57,048] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:10:57,048] {logging_mixin.py:115} INFO - [2023-07-11 20:10:57,048] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:57,428] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:10:57,450] {logging_mixin.py:115} INFO - [2023-07-11 20:10:57,450] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:10:57,471] {logging_mixin.py:115} INFO - [2023-07-11 20:10:57,471] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:10:57,488] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.444 seconds
[2023-07-11 20:11:07,526] {processor.py:153} INFO - Started process (PID=538) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:07,527] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:11:07,528] {logging_mixin.py:115} INFO - [2023-07-11 20:11:07,527] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:08,031] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:08,060] {logging_mixin.py:115} INFO - [2023-07-11 20:11:08,059] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:11:08,087] {logging_mixin.py:115} INFO - [2023-07-11 20:11:08,087] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:11:08,103] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.585 seconds
[2023-07-11 20:11:18,551] {processor.py:153} INFO - Started process (PID=549) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:18,553] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:11:18,554] {logging_mixin.py:115} INFO - [2023-07-11 20:11:18,553] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:18,996] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:19,021] {logging_mixin.py:115} INFO - [2023-07-11 20:11:19,021] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:11:19,054] {logging_mixin.py:115} INFO - [2023-07-11 20:11:19,054] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:11:19,086] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.540 seconds
[2023-07-11 20:11:29,678] {processor.py:153} INFO - Started process (PID=560) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:29,678] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:11:29,679] {logging_mixin.py:115} INFO - [2023-07-11 20:11:29,679] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:30,081] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:30,107] {logging_mixin.py:115} INFO - [2023-07-11 20:11:30,106] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:11:30,136] {logging_mixin.py:115} INFO - [2023-07-11 20:11:30,136] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:11:30,154] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.480 seconds
[2023-07-11 20:11:40,823] {processor.py:153} INFO - Started process (PID=571) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:40,823] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:11:40,824] {logging_mixin.py:115} INFO - [2023-07-11 20:11:40,824] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:41,188] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:41,209] {logging_mixin.py:115} INFO - [2023-07-11 20:11:41,208] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:11:41,231] {logging_mixin.py:115} INFO - [2023-07-11 20:11:41,231] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:11:41,246] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.428 seconds
[2023-07-11 20:11:51,964] {processor.py:153} INFO - Started process (PID=582) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:51,971] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:11:51,972] {logging_mixin.py:115} INFO - [2023-07-11 20:11:51,972] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:52,402] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:11:52,425] {logging_mixin.py:115} INFO - [2023-07-11 20:11:52,424] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:11:52,449] {logging_mixin.py:115} INFO - [2023-07-11 20:11:52,449] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:11:52,466] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.509 seconds
[2023-07-11 20:12:03,115] {processor.py:153} INFO - Started process (PID=593) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:03,116] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:12:03,117] {logging_mixin.py:115} INFO - [2023-07-11 20:12:03,117] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:03,594] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:03,634] {logging_mixin.py:115} INFO - [2023-07-11 20:12:03,633] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:12:03,665] {logging_mixin.py:115} INFO - [2023-07-11 20:12:03,665] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:12:03,721] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.611 seconds
[2023-07-11 20:12:14,237] {processor.py:153} INFO - Started process (PID=604) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:14,237] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:12:14,238] {logging_mixin.py:115} INFO - [2023-07-11 20:12:14,238] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:14,691] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:14,715] {logging_mixin.py:115} INFO - [2023-07-11 20:12:14,715] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:12:14,744] {logging_mixin.py:115} INFO - [2023-07-11 20:12:14,743] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:12:14,774] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.541 seconds
[2023-07-11 20:12:25,374] {processor.py:153} INFO - Started process (PID=615) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:25,375] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:12:25,376] {logging_mixin.py:115} INFO - [2023-07-11 20:12:25,376] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:25,908] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:25,939] {logging_mixin.py:115} INFO - [2023-07-11 20:12:25,938] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:12:25,977] {logging_mixin.py:115} INFO - [2023-07-11 20:12:25,976] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:12:26,031] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.662 seconds
[2023-07-11 20:12:31,651] {processor.py:153} INFO - Started process (PID=626) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:31,652] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:12:31,652] {logging_mixin.py:115} INFO - [2023-07-11 20:12:31,652] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:31,987] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:12:32,008] {logging_mixin.py:115} INFO - [2023-07-11 20:12:32,008] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:12:32,029] {logging_mixin.py:115} INFO - [2023-07-11 20:12:32,029] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:12:32,043] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.396 seconds
[2023-07-11 20:13:19,916] {processor.py:153} INFO - Started process (PID=172) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:19,937] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:13:19,938] {logging_mixin.py:115} INFO - [2023-07-11 20:13:19,938] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:23,309] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:23,359] {logging_mixin.py:115} INFO - [2023-07-11 20:13:23,359] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:13:23,426] {logging_mixin.py:115} INFO - [2023-07-11 20:13:23,426] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:13:24,303] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 4.406 seconds
[2023-07-11 20:13:34,374] {processor.py:153} INFO - Started process (PID=189) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:34,377] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:13:34,378] {logging_mixin.py:115} INFO - [2023-07-11 20:13:34,378] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:35,393] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:35,462] {logging_mixin.py:115} INFO - [2023-07-11 20:13:35,460] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:13:35,544] {logging_mixin.py:115} INFO - [2023-07-11 20:13:35,544] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:13:35,609] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.242 seconds
[2023-07-11 20:13:45,671] {processor.py:153} INFO - Started process (PID=200) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:45,671] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:13:45,672] {logging_mixin.py:115} INFO - [2023-07-11 20:13:45,672] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:46,024] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:46,046] {logging_mixin.py:115} INFO - [2023-07-11 20:13:46,046] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:13:46,069] {logging_mixin.py:115} INFO - [2023-07-11 20:13:46,069] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:13:46,120] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.453 seconds
[2023-07-11 20:13:56,820] {processor.py:153} INFO - Started process (PID=211) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:56,821] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:13:56,822] {logging_mixin.py:115} INFO - [2023-07-11 20:13:56,822] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:57,195] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:13:57,223] {logging_mixin.py:115} INFO - [2023-07-11 20:13:57,223] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:13:57,252] {logging_mixin.py:115} INFO - [2023-07-11 20:13:57,252] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:13:57,306] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.489 seconds
[2023-07-11 20:14:08,000] {processor.py:153} INFO - Started process (PID=222) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:08,001] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:14:08,003] {logging_mixin.py:115} INFO - [2023-07-11 20:14:08,002] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:08,677] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:08,805] {logging_mixin.py:115} INFO - [2023-07-11 20:14:08,804] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:14:08,892] {logging_mixin.py:115} INFO - [2023-07-11 20:14:08,892] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:14:08,916] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.928 seconds
[2023-07-11 20:14:19,159] {processor.py:153} INFO - Started process (PID=242) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:19,160] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:14:19,161] {logging_mixin.py:115} INFO - [2023-07-11 20:14:19,161] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:19,707] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:19,742] {logging_mixin.py:115} INFO - [2023-07-11 20:14:19,741] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:14:19,782] {logging_mixin.py:115} INFO - [2023-07-11 20:14:19,782] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:14:19,816] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.664 seconds
[2023-07-11 20:14:30,302] {processor.py:153} INFO - Started process (PID=256) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:30,344] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:14:30,345] {logging_mixin.py:115} INFO - [2023-07-11 20:14:30,344] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:31,083] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:31,142] {logging_mixin.py:115} INFO - [2023-07-11 20:14:31,141] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:14:31,206] {logging_mixin.py:115} INFO - [2023-07-11 20:14:31,206] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:14:31,240] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 0.942 seconds
[2023-07-11 20:14:41,433] {processor.py:153} INFO - Started process (PID=267) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:41,434] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:14:41,434] {logging_mixin.py:115} INFO - [2023-07-11 20:14:41,434] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:42,349] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:42,435] {logging_mixin.py:115} INFO - [2023-07-11 20:14:42,434] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:14:42,529] {logging_mixin.py:115} INFO - [2023-07-11 20:14:42,528] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:14:42,577] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.151 seconds
[2023-07-11 20:14:52,706] {processor.py:153} INFO - Started process (PID=281) to work on /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:52,708] {processor.py:641} INFO - Processing file /opt/airflow/dags/dag_weather.py for tasks to queue
[2023-07-11 20:14:52,710] {logging_mixin.py:115} INFO - [2023-07-11 20:14:52,709] {dagbag.py:508} INFO - Filling up the DagBag from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:54,211] {processor.py:651} INFO - DAG(s) dict_keys(['dag_weather']) retrieved from /opt/airflow/dags/dag_weather.py
[2023-07-11 20:14:54,289] {logging_mixin.py:115} INFO - [2023-07-11 20:14:54,287] {dag.py:2420} INFO - Sync 1 DAGs
[2023-07-11 20:14:54,373] {logging_mixin.py:115} INFO - [2023-07-11 20:14:54,373] {dag.py:2972} INFO - Setting next_dagrun for dag_weather to 2023-07-11T00:00:00+00:00, run_after=2023-07-12T00:00:00+00:00
[2023-07-11 20:14:54,421] {processor.py:161} INFO - Processing /opt/airflow/dags/dag_weather.py took 1.738 seconds
